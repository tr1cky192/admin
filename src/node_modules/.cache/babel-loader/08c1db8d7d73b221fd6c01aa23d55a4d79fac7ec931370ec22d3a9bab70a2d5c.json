{"ast":null,"code":"var _jsxFileName = \"D:\\\\ad\\\\Adminka\\\\src\\\\components\\\\pages\\\\StatisticsPage\\\\Users\\\\UsersList\\\\UsersList.tsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { Spinner } from 'components/shared/Loader';\n// import { Inner, TextContent, TextID, Wrapper, WrapperText, SearchButton, InputSearch, Fun, InputContainer, IconScrh, LabelFormed, ClearButtoned } from './UsersList.styled';\n// import pi from '../../../../../assets/icons/pict.svg';\n\n// type Prop = {\n//   type?: string;\n//   isShowUsers?: number | null;\n// };\n\n// export type DataProp = {\n//   lastName: string;\n//   firstName: string;\n//   id: string;\n// }\n\n// export const UsersList: React.FC<Prop & { searchQuery?: string, onSearch: (query: string) => void }> = ({ type, isShowUsers, searchQuery, onSearch }) => {\n//   const [isSearchClicked, setIsSearchClicked] = useState(false);\n//   const [apiData, setApiData] = useState<DataProp[]>([]);\n\n//   const handleSearchClick = () => {\n//     setIsSearchClicked(true);\n//   };\n\n//   const fetchData = () => {\n//     axios\n//       .get<DataProp[]>('https://server-your-price-booking.onrender.com/api/acsess-to-admin/get-all-users')\n//       .then((response) => {\n//         setApiData(response.data);\n//       })\n//       .catch((error) => {\n//         console.error('Error fetching data:', error);\n//       });\n//   };\n\n//   useEffect(() => {\n//     fetchData();\n//   }, []);\n\n//   const filteredData = Array.isArray(apiData)\n//     ? apiData.filter((item) => item.lastName.toLowerCase().includes(searchQuery!.toLowerCase()))\n//     : [];\n\n//   const handleClearClick = () => {\n//     setIsSearchClicked(false);\n//     onSearch('');\n//   };\n\n//   const displayData = isSearchClicked ? filteredData : apiData;\n\n//   return (\n//     <Wrapper>\n//       <Fun>\n//         <InputContainer>\n//           <InputSearch\n//             className=\"input\"\n//             type=\"text\"\n//             placeholder=\"Search ID Hoteliers or/and Name object\"\n//             value={searchQuery}\n//             onChange={(e) => onSearch(e.target.value)}\n//           />\n//           <LabelFormed className=\"label\" htmlFor=\"input-id\">Search ID Hoteliers or/and Name object</LabelFormed>\n//           <IconScrh src={pi} alt=\"Search\" />\n//           {searchQuery && (\n//             <ClearButtoned type=\"button\" onClick={handleClearClick}>Close</ClearButtoned>\n//           )}\n//           <SearchButton onClick={handleSearchClick}>Search</SearchButton>\n//         </InputContainer>\n//       </Fun>\n//       {displayData.length > 0 &&\n//         displayData.map(({ lastName, id }, index) => (\n//           <Inner\n//             border={isShowUsers === index}\n//             hidden={isShowUsers !== index && isShowUsers !== null}\n//             position={isShowUsers !== null}\n//             key={lastName}\n//             tabIndex={index}\n//           >\n//             <TextID tabIndex={index}>ID {id}</TextID>\n//             <WrapperText tabIndex={index} typePage={type}>\n//   <TextContent tabIndex={index}>\n//     {isShowUsers && <Spinner />}\n//     {!isShowUsers && isShowUsers !== index &&\n//       (lastName && lastName.length > 20 ? lastName.slice(0, 6) : lastName)}\n//     {!isShowUsers && isShowUsers !== index &&\n//       (displayData[index].lastName) // Replace 'yourDataProperty' with the actual property you want to display\n//     }\n//   </TextContent>\n// </WrapperText>\n//           </Inner>\n//         ))}\n//     </Wrapper>\n//   )};\n\nimport React, { useState, useEffect } from 'react';\n// import { useSelector } from 'react-redux';\n// import { fetchHotelsById } from 'features/hoteliers/hoteliersOperation';\n// import { useAppDispatch } from 'App';\n// import { selectorHoteliers } from 'features/hoteliers/hoteliersSelectors';\nimport { Spinner } from 'components/shared/Loader';\nimport { Inner, TextContent, TextID, Wrapper, WrapperText } from './UsersList.styled';\n\n// import exo from '../../../../../assets/icons/x.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UsersList = _ref => {\n  _s();\n  let {\n    type,\n    isShowUsers,\n    searchQuery,\n    onSearch\n  } = _ref;\n  const [userData, setUserData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    // Make an API request to fetch user data\n    fetch('https://server-your-price-booking.onrender.com/api/access-to-admin/get-all-users').then(response => response.json()).then(data => {\n      if (data.code === 200) {\n        // Extract the user data from the response\n        setUserData(data.users);\n      }\n      setIsLoading(false);\n    }).catch(error => {\n      console.error('Error fetching data: ', error);\n      setIsLoading(false);\n    });\n  }, []);\n\n  // useEffect(() => {\n  //   if (hoteliers.length > 0) hoteliers.map(({ owner }) => dispatch(fetchHotelsById(owner)));\n  //   // eslint-disable-next-line\n  // }, [dispatch]);\n\n  // const data: DataProp[] = [\n  //   {\n  //     name: 'Hopin Viktoria',\n  //     id: '7874567GHV',\n  //   },\n  //   {\n  //     name: 'Klinton Bill',\n  //     id: '1123467LON',\n  //   },\n  //   {\n  //     name: 'Buch Viktoria',\n  //     id: '9889T567KI',\n  //   },\n  //   {\n  //     name: 'Klinton Sofia',\n  //     id: '1123467LON',\n  //   },\n  // ];\n\n  // const filteredData = searchQuery\n  // ? data.filter((item) => item.name.toLowerCase().includes(searchQuery.toLowerCase()))\n  // : data;\n  // const handleClearClick = () => {\n  //   setIsSearchClicked(false); // Скидаємо флаг пошуку, коли поле очищається\n  //   onSearch(''); // Очищаємо searchQuery\n  // };\n  // const displayData = isSearchClicked ? filteredData : data;\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: isLoading ?\n    /*#__PURE__*/\n    // Display a loading indicator while fetching data\n    _jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }, this) :\n    // Display the user data once it's loaded\n    userData.map(_ref2 => {\n      let {\n        _id,\n        firstName,\n        lastName\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(Inner, {\n        border: isShowUsers === _id || isShowUsers !== null && isShowUsers === _id,\n        hidden: isShowUsers !== _id && isShowUsers !== null,\n        position: isShowUsers !== null,\n        tabIndex: _id,\n        children: [/*#__PURE__*/_jsxDEV(TextID, {\n          tabIndex: _id,\n          children: [\"ID \", _id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(WrapperText, {\n          tabIndex: _id,\n          typePage: type,\n          children: /*#__PURE__*/_jsxDEV(TextContent, {\n            tabIndex: _id,\n            children: [isShowUsers && /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 33\n            }, this), !isShowUsers && isShowUsers !== _id && `${firstName} ${lastName}`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this)]\n      }, _id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n};\n_s(UsersList, \"+uCquTr+L/lRAF2y5We5vGjHYiU=\");\n_c = UsersList;\nvar _c;\n$RefreshReg$(_c, \"UsersList\");","map":{"version":3,"names":["React","useState","useEffect","Spinner","Inner","TextContent","TextID","Wrapper","WrapperText","jsxDEV","_jsxDEV","UsersList","_ref","_s","type","isShowUsers","searchQuery","onSearch","userData","setUserData","isLoading","setIsLoading","fetch","then","response","json","data","code","users","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","_ref2","_id","firstName","lastName","border","hidden","position","tabIndex","typePage","_c","$RefreshReg$"],"sources":["D:/ad/Adminka/src/components/pages/StatisticsPage/Users/UsersList/UsersList.tsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { Spinner } from 'components/shared/Loader';\n// import { Inner, TextContent, TextID, Wrapper, WrapperText, SearchButton, InputSearch, Fun, InputContainer, IconScrh, LabelFormed, ClearButtoned } from './UsersList.styled';\n// import pi from '../../../../../assets/icons/pict.svg';\n\n// type Prop = {\n//   type?: string;\n//   isShowUsers?: number | null;\n// };\n\n// export type DataProp = {\n//   lastName: string;\n//   firstName: string;\n//   id: string;\n// }\n\n// export const UsersList: React.FC<Prop & { searchQuery?: string, onSearch: (query: string) => void }> = ({ type, isShowUsers, searchQuery, onSearch }) => {\n//   const [isSearchClicked, setIsSearchClicked] = useState(false);\n//   const [apiData, setApiData] = useState<DataProp[]>([]);\n\n//   const handleSearchClick = () => {\n//     setIsSearchClicked(true);\n//   };\n\n//   const fetchData = () => {\n//     axios\n//       .get<DataProp[]>('https://server-your-price-booking.onrender.com/api/acsess-to-admin/get-all-users')\n//       .then((response) => {\n//         setApiData(response.data);\n//       })\n//       .catch((error) => {\n//         console.error('Error fetching data:', error);\n//       });\n//   };\n\n//   useEffect(() => {\n//     fetchData();\n//   }, []);\n\n//   const filteredData = Array.isArray(apiData)\n//     ? apiData.filter((item) => item.lastName.toLowerCase().includes(searchQuery!.toLowerCase()))\n//     : [];\n\n//   const handleClearClick = () => {\n//     setIsSearchClicked(false);\n//     onSearch('');\n//   };\n\n//   const displayData = isSearchClicked ? filteredData : apiData;\n\n//   return (\n//     <Wrapper>\n//       <Fun>\n//         <InputContainer>\n//           <InputSearch\n//             className=\"input\"\n//             type=\"text\"\n//             placeholder=\"Search ID Hoteliers or/and Name object\"\n//             value={searchQuery}\n//             onChange={(e) => onSearch(e.target.value)}\n//           />\n//           <LabelFormed className=\"label\" htmlFor=\"input-id\">Search ID Hoteliers or/and Name object</LabelFormed>\n//           <IconScrh src={pi} alt=\"Search\" />\n//           {searchQuery && (\n//             <ClearButtoned type=\"button\" onClick={handleClearClick}>Close</ClearButtoned>\n//           )}\n//           <SearchButton onClick={handleSearchClick}>Search</SearchButton>\n//         </InputContainer>\n//       </Fun>\n//       {displayData.length > 0 &&\n//         displayData.map(({ lastName, id }, index) => (\n//           <Inner\n//             border={isShowUsers === index}\n//             hidden={isShowUsers !== index && isShowUsers !== null}\n//             position={isShowUsers !== null}\n//             key={lastName}\n//             tabIndex={index}\n//           >\n//             <TextID tabIndex={index}>ID {id}</TextID>\n//             <WrapperText tabIndex={index} typePage={type}>\n//   <TextContent tabIndex={index}>\n//     {isShowUsers && <Spinner />}\n//     {!isShowUsers && isShowUsers !== index &&\n//       (lastName && lastName.length > 20 ? lastName.slice(0, 6) : lastName)}\n//     {!isShowUsers && isShowUsers !== index &&\n//       (displayData[index].lastName) // Replace 'yourDataProperty' with the actual property you want to display\n//     }\n//   </TextContent>\n// </WrapperText>\n//           </Inner>\n//         ))}\n//     </Wrapper>\n//   )};\n\nimport React, { useState, useEffect } from 'react';\n// import { useSelector } from 'react-redux';\n// import { fetchHotelsById } from 'features/hoteliers/hoteliersOperation';\n// import { useAppDispatch } from 'App';\n// import { selectorHoteliers } from 'features/hoteliers/hoteliersSelectors';\nimport { Spinner } from 'components/shared/Loader';\nimport { Inner, TextContent, TextID, Wrapper, WrapperText, SearchButton,InputSearch,Fun,InputContainer,IconScrh, LabelFormed,ClearButtoned } from './UsersList.styled';\nimport pi from '../../../../../assets/icons/pict.svg';\n// import exo from '../../../../../assets/icons/x.svg';\ntype Prop = {\n    type?: string;\n  isShowUsers?: number | null;\n  \n};\n\nexport type DataProp = {\n  _id: string;\n  firstName: string;\n  lastName: string;\n}\n\n\nexport const UsersList: React.FC<Prop & { searchQuery?: string, onSearch: (query: string) => void }> = ({ type, isShowUsers, searchQuery, onSearch }) => {\n  const [userData, setUserData] = useState<DataProp[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    // Make an API request to fetch user data\n    fetch('https://server-your-price-booking.onrender.com/api/access-to-admin/get-all-users')\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.code === 200) {\n          // Extract the user data from the response\n          setUserData(data.users);\n        }\n        setIsLoading(false);\n      })\n      .catch((error) => {\n        console.error('Error fetching data: ', error);\n        setIsLoading(false);\n      });\n  }, []);\n\n    // useEffect(() => {\n    //   if (hoteliers.length > 0) hoteliers.map(({ owner }) => dispatch(fetchHotelsById(owner)));\n    //   // eslint-disable-next-line\n    // }, [dispatch]);\n  \n    // const data: DataProp[] = [\n    //   {\n    //     name: 'Hopin Viktoria',\n    //     id: '7874567GHV',\n    //   },\n    //   {\n    //     name: 'Klinton Bill',\n    //     id: '1123467LON',\n    //   },\n    //   {\n    //     name: 'Buch Viktoria',\n    //     id: '9889T567KI',\n    //   },\n    //   {\n    //     name: 'Klinton Sofia',\n    //     id: '1123467LON',\n    //   },\n    // ];\n\n\n    // const filteredData = searchQuery\n    // ? data.filter((item) => item.name.toLowerCase().includes(searchQuery.toLowerCase()))\n    // : data;\n    // const handleClearClick = () => {\n    //   setIsSearchClicked(false); // Скидаємо флаг пошуку, коли поле очищається\n    //   onSearch(''); // Очищаємо searchQuery\n    // };\n  // const displayData = isSearchClicked ? filteredData : data;\n  return (\n    <Wrapper>\n      {isLoading ? (\n        // Display a loading indicator while fetching data\n        <Spinner />\n      ) : (\n        // Display the user data once it's loaded\n        userData.map(({ _id, firstName, lastName }) => (\n          <Inner\n            border={isShowUsers === _id || (isShowUsers !== null && isShowUsers === _id)}\n            hidden={isShowUsers !== _id && isShowUsers !== null}\n            position={isShowUsers !== null}\n            key={_id}\n            tabIndex={_id}\n          >\n            <TextID tabIndex={_id}>ID {_id}</TextID>\n            <WrapperText tabIndex={_id} typePage={type}>\n              <TextContent tabIndex={_id}>\n                {isShowUsers && <Spinner />}\n                {!isShowUsers && (isShowUsers !== _id) && `${firstName} ${lastName}`}\n              </TextContent>\n            </WrapperText>\n          </Inner>\n        ))\n      )}\n    </Wrapper>\n  );\n}\n\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}