{"ast":null,"code":"var _jsxFileName = \"D:\\\\ad\\\\Adminka\\\\src\\\\components\\\\pages\\\\LoginPage\\\\LoginPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [verificationCode, setVerificationCode] = useState('');\n  const [isCodeSent, setIsCodeSent] = useState(false);\n  const [userRole, setUserRole] = useState(null);\n  const [userToken, setUserToken] = useState(null);\n  const handleEmailChange = e => {\n    setEmail(e.target.value);\n  };\n  const handleVerificationCodeChange = e => {\n    setVerificationCode(e.target.value);\n  };\n  const sendVerificationCode = async () => {\n    try {\n      const response = await axios.post('https://server-your-price-booking.onrender.com/api/acsess-to-admin/log-in-admin/', {\n        email,\n        secretCode: verificationCode\n      });\n      const {\n        status,\n        data\n      } = response.data;\n      if (status === 'success') {\n        setIsCodeSent(true);\n        setUserRole(data.role);\n        setUserToken(data.token);\n      } else {\n        console.error('Verification failed');\n      }\n    } catch (error) {\n      console.error('Error while verifying the secret code', error);\n    }\n  };\n  const verifyCode = async () => {\n    try {\n      if (userRole === 'superadmin') {\n        setUserToken(tokens.superadmin.result.token);\n        console.log('Super Admin Access');\n      } else if (userRole === 'admin') {\n        setUserToken(tokens.admin.user.token);\n        console.log('Admin Access');\n      } else {\n        console.error('Invalid user role');\n      }\n    } catch (error) {\n      console.error('Code verification failed', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isCodeSent ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: handleEmailChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Verification Code:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: verificationCode,\n          onChange: handleVerificationCodeChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: verifyCode,\n        children: \"Verify Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: handleEmailChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: sendVerificationCode,\n        children: \"Send Verification Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"1xzIdiPEXaIALd6F8UtO9NAURl4=\");\n_c = LoginPage;\nexport { LoginPage };\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","LoginPage","_s","email","setEmail","verificationCode","setVerificationCode","isCodeSent","setIsCodeSent","userRole","setUserRole","userToken","setUserToken","handleEmailChange","e","target","value","handleVerificationCodeChange","sendVerificationCode","response","post","secretCode","status","data","role","token","console","error","verifyCode","tokens","superadmin","result","log","admin","user","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/ad/Adminka/src/components/pages/LoginPage/LoginPage.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst LoginPage = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [verificationCode, setVerificationCode] = useState('');\r\n  const [isCodeSent, setIsCodeSent] = useState(false);\r\n  const [userRole, setUserRole] = useState<string | null>(null);\r\n  const [userToken, setUserToken] = useState<string | null>(null);\r\n\r\n  const handleEmailChange = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n\r\n  const handleVerificationCodeChange = (e) => {\r\n    setVerificationCode(e.target.value);\r\n  };\r\n\r\n  const sendVerificationCode = async () => {\r\n    try {\r\n      const response = await axios.post(\r\n        'https://server-your-price-booking.onrender.com/api/acsess-to-admin/log-in-admin/',\r\n        {\r\n          email,\r\n          secretCode: verificationCode,\r\n        }\r\n      );\r\n\r\n      const { status, data } = response.data;\r\n      if (status === 'success') {\r\n        setIsCodeSent(true);\r\n        setUserRole(data.role as string | null);\r\n        setUserToken(data.token as string | null);\r\n      } else {\r\n        console.error('Verification failed');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error while verifying the secret code', error);\r\n    }\r\n  };\r\n\r\n  const verifyCode = async () => {\r\n    try {\r\n      if (userRole === 'superadmin') {\r\n        setUserToken(tokens.superadmin.result.token);\r\n        console.log('Super Admin Access');\r\n      } else if (userRole === 'admin') {\r\n        setUserToken(tokens.admin.user.token);\r\n        console.log('Admin Access');\r\n      } else {\r\n        console.error('Invalid user role');\r\n      }\r\n    } catch (error) {\r\n      console.error('Code verification failed', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isCodeSent ? (\r\n        <div>\r\n          <label>Email:\r\n            <input type=\"email\" value={email} onChange={handleEmailChange} />\r\n          </label>\r\n          <label>Verification Code:\r\n            <input type=\"text\" value={verificationCode} onChange={handleVerificationCodeChange} />\r\n          </label>\r\n          <button type=\"button\" onClick={verifyCode}>Verify Code</button>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <label>Email:\r\n            <input type=\"email\" value={email} onChange={handleEmailChange} />\r\n          </label>\r\n          <button type=\"button\" onClick={sendVerificationCode}>Send Verification Code</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { LoginPage };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}