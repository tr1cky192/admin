{"ast":null,"code":"var _jsxFileName = \"D:\\\\ad\\\\Adminka\\\\src\\\\components\\\\pages\\\\StatisticsPage\\\\Users\\\\UsersList\\\\UsersList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n// import { useSelector } from 'react-redux';\n// import { fetchHotelsById } from 'features/hoteliers/hoteliersOperation';\n// import { useAppDispatch } from 'App';\n// import { selectorHoteliers } from 'features/hoteliers/hoteliersSelectors';\nimport { Spinner } from 'components/shared/Loader';\nimport { Inner, TextContent, TextID, Wrapper, WrapperText, SearchButton, InputSearch, Fun, InputContainer, IconScrh, LabelFormed } from './UsersList.styled';\nimport pi from '../../../../../assets/icons/pict.svg';\n// import exo from '../../../../../assets/icons/x.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UsersList = _ref => {\n  _s();\n  let {\n    type,\n    isShowUsers,\n    searchQuery,\n    onSearch\n  } = _ref;\n  // const dispatch = useAppDispatch();\n  // const { hoteliers, isLoadingHotels } = useSelector(selectorHoteliers);\n  // console.log(hoteliers)\n  const [isSearchClicked, setIsSearchClicked] = useState(false);\n  const [isSearchEmpty, setIsSearchEmpty] = useState(true);\n  const handleSearchClick = () => {\n    setIsSearchClicked(true);\n  };\n\n  // useEffect(() => {\n  //   if (hoteliers.length > 0) hoteliers.map(({ owner }) => dispatch(fetchHotelsById(owner)));\n  //   // eslint-disable-next-line\n  // }, [dispatch]);\n\n  const data = [{\n    name: 'Hopin Viktoria',\n    id: '7874567GHV'\n  }, {\n    name: 'Klinton Bill',\n    id: '1123467LON'\n  }, {\n    name: 'Buch Viktoria',\n    id: '9889T567KI'\n  }, {\n    name: 'Klinton Sofia',\n    id: '1123467LON'\n  }];\n  const handleSearchInputChange = e => {\n    const query = e.target.value;\n    onSearch(query);\n    setIsSearchEmpty(query === '');\n  };\n  const handleClearSearch = () => {\n    onSearch('');\n    setIsSearchEmpty(true);\n  };\n  const filteredData = searchQuery ? data.filter(item => item.name.toLowerCase().includes(searchQuery.toLowerCase())) : data;\n  const displayData = isSearchClicked ? filteredData : data;\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Fun, {\n      children: /*#__PURE__*/_jsxDEV(InputContainer, {\n        children: [/*#__PURE__*/_jsxDEV(InputSearch, {\n          className: \"input\",\n          type: \"text\",\n          placeholder: \"Search ID Hoteliers or/and Name object\",\n          value: searchQuery,\n          onChange: handleSearchInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this), isSearchEmpty ? null : /*#__PURE__*/_jsxDEV(\"closesBut\", {\n          type: \"button\",\n          onClick: handleClearSearch,\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(LabelFormed, {\n          className: \"label\",\n          htmlFor: \"input-id\",\n          children: \"Search ID Hoteliers or/and Name object\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(IconScrh, {\n          src: pi,\n          alt: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(SearchButton, {\n          onClick: handleSearchClick,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), displayData.length > 0 && displayData.map((_ref2, index) => {\n      let {\n        name,\n        id\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(Inner, {\n        border: isShowUsers === index,\n        hidden: isShowUsers !== index && isShowUsers !== null,\n        position: isShowUsers !== null,\n        tabIndex: index,\n        children: [/*#__PURE__*/_jsxDEV(TextID, {\n          tabIndex: index,\n          children: [\"ID \", id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(WrapperText, {\n          tabIndex: index,\n          typePage: type,\n          children: /*#__PURE__*/_jsxDEV(TextContent, {\n            tabIndex: index,\n            children: [isShowUsers && /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 35\n            }, this), !isShowUsers && isShowUsers !== index && (name && name.length > 20 ? name.slice(0, 6) : name)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this)]\n      }, name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 7\n  }, this);\n};\n_s(UsersList, \"9SmyEWWxb0/UtIqVuFjFv0t05oQ=\");\n_c = UsersList;\nvar _c;\n$RefreshReg$(_c, \"UsersList\");","map":{"version":3,"names":["React","useState","Spinner","Inner","TextContent","TextID","Wrapper","WrapperText","SearchButton","InputSearch","Fun","InputContainer","IconScrh","LabelFormed","pi","jsxDEV","_jsxDEV","UsersList","_ref","_s","type","isShowUsers","searchQuery","onSearch","isSearchClicked","setIsSearchClicked","isSearchEmpty","setIsSearchEmpty","handleSearchClick","data","name","id","handleSearchInputChange","e","query","target","value","handleClearSearch","filteredData","filter","item","toLowerCase","includes","displayData","children","className","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","htmlFor","src","alt","length","map","_ref2","index","border","hidden","position","tabIndex","typePage","slice","_c","$RefreshReg$"],"sources":["D:/ad/Adminka/src/components/pages/StatisticsPage/Users/UsersList/UsersList.tsx"],"sourcesContent":["\nimport React, { useState } from 'react';\n// import { useSelector } from 'react-redux';\n// import { fetchHotelsById } from 'features/hoteliers/hoteliersOperation';\n// import { useAppDispatch } from 'App';\n// import { selectorHoteliers } from 'features/hoteliers/hoteliersSelectors';\nimport { Spinner } from 'components/shared/Loader';\nimport { Inner, TextContent, TextID, Wrapper, WrapperText, SearchButton,InputSearch,Fun,InputContainer,IconScrh, LabelFormed, closesBut } from './UsersList.styled';\nimport pi from '../../../../../assets/icons/pict.svg';\n// import exo from '../../../../../assets/icons/x.svg';\ntype Prop = {\n    type?: string;\n  isShowUsers?: number | null;\n  \n};\n\nexport type DataProp = {\n  name: string;\n  id: string;\n}\n\n\nexport const UsersList: React.FC<Prop & { searchQuery?: string, onSearch: (query: string)=> void }> = ({ type, isShowUsers, searchQuery, onSearch }) => {\n    // const dispatch = useAppDispatch();\n    // const { hoteliers, isLoadingHotels } = useSelector(selectorHoteliers);\n    // console.log(hoteliers)\n    const [isSearchClicked, setIsSearchClicked] = useState(false);\n    const [isSearchEmpty, setIsSearchEmpty] = useState(true);\n    const handleSearchClick = () => {\n      setIsSearchClicked(true);\n    };\n\n\n    // useEffect(() => {\n    //   if (hoteliers.length > 0) hoteliers.map(({ owner }) => dispatch(fetchHotelsById(owner)));\n    //   // eslint-disable-next-line\n    // }, [dispatch]);\n  \n    const data: DataProp[] = [\n      {\n        name: 'Hopin Viktoria',\n        id: '7874567GHV',\n      },\n      {\n        name: 'Klinton Bill',\n        id: '1123467LON',\n      },\n      {\n        name: 'Buch Viktoria',\n        id: '9889T567KI',\n      },\n      {\n        name: 'Klinton Sofia',\n        id: '1123467LON',\n      },\n    ];\n    const handleSearchInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n      const query = e.target.value;\n      onSearch(query);\n      setIsSearchEmpty(query === '');\n  };\n  const handleClearSearch = () => {\n    onSearch('');\n    setIsSearchEmpty(true);\n};\n    const filteredData = searchQuery\n    ? data.filter((item) => item.name.toLowerCase().includes(searchQuery.toLowerCase()))\n    : data;\n\n  const displayData = isSearchClicked ? filteredData : data;\n    return (\n      <Wrapper>\n        <Fun>\n       <InputContainer>\n        <InputSearch\n        className=\"input\"\n        type=\"text\"\n        placeholder=\"Search ID Hoteliers or/and Name object\"\n        value={searchQuery}\n        onChange={handleSearchInputChange}\n      />\n      {isSearchEmpty ? null : (\n                        <closesBut type=\"button\" onClick={handleClearSearch}>Clear</closesBut>\n                    )}\n\n      <LabelFormed className=\"label\" htmlFor=\"input-id\">Search ID Hoteliers or/and Name object</LabelFormed>\n      <IconScrh src={pi} alt=\"Search\" />\n      <SearchButton onClick={handleSearchClick}>Search</SearchButton>\n      </InputContainer>\n      </Fun>\n        {displayData.length > 0 &&\n          displayData.map(({ name,id }, index) => (\n            <Inner\n              border={isShowUsers === index}\n              hidden={isShowUsers !== index && isShowUsers !== null}\n              position={isShowUsers !== null}\n              key={name}\n              tabIndex={index}\n            >\n              <TextID tabIndex={index}>ID {id}</TextID>\n              <WrapperText tabIndex={index} typePage={type}>\n                <TextContent tabIndex={index}>\n                  {isShowUsers && <Spinner />}\n                  {!isShowUsers &&\n                    isShowUsers !== index &&\n                    (name && name.length > 20 ? name.slice(0, 6) : name)}\n                  {/* {!isShowUsers && isShowUsers !== index && name && name.length > 0 && '...'} */}\n                </TextContent>\n              </WrapperText>\n            </Inner>\n          ))}\n      </Wrapper>\n    );\n} \n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}