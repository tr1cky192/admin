{"ast":null,"code":"var _jsxFileName = \"D:\\\\ad\\\\Adminka\\\\src\\\\components\\\\pages\\\\LoginPage\\\\LoginPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n// import { setToken } from 'features/access/tokenSlice'; \n// import { useDispatch } from 'react-redux'; \nimport axios from 'axios';\nimport tokens from './Token.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [verificationCode, setVerificationCode] = useState('');\n  const [isCodeSent, setIsCodeSent] = useState(false);\n  const [userRole, setUserRole] = useState(null);\n  const [userToken, setUserToken] = useState(null);\n\n  // type ResponseData = {\n  //   status: string;\n  //   data: {\n  //     token: string;\n  //   };\n  // }\n  // const dispatch = useDispatch();\n  //   const validPassword = async (): Promise<boolean> => {\n  //     try {\n  //       const response: AxiosResponse<ResponseData> = await axios.post(\n\n  //         'https://server-your-price-booking.onrender.com/api/acsess-to-admin/log-in-admin/',\n  //         {\n  //           email: `${email}`,\n  //           secretCode: verificationCode,\n  //         }\n\n  //       );\n\n  //       const { status, data } = response.data;\n  //     dispatch(setToken(data.token));\n  //     setUserToken(data.token);\n\n  //     return status === 'success';\n  //   } catch (error) {\n  //     console.error('Error while verifying the secret code', error);\n  //     return false;\n  //   }\n  // };\n  // const sendVerificationCode = async () => {\n  //  if(!(await validPassword())){\n  //   console.log('error');\n  //  }\n  //  else{\n  //   setIsCodeSent(true);\n  //  }\n  // };\n  const sendVerificationCode = async () => {\n    // Send a request to the server to verify the email and receive the user's role.\n    try {\n      const response = await axios.post('https://server-your-price-booking.onrender.com/api/acsess-to-admin/log-in-admin/', {\n        email: `${email}`,\n        secretCode: verificationCode\n      });\n      const {\n        status,\n        data\n      } = response.data;\n\n      // Assuming the response contains the user's role\n      const userRole = data.role;\n      if (status === 'success') {\n        setIsCodeSent(true);\n        setUserRole(userRole);\n      } else {\n        console.error('Verification failed');\n      }\n    } catch (error) {\n      console.error('Error while verifying the secret code', error);\n    }\n  };\n  const verifyCode = async () => {\n    try {\n      if (userRole === 'superadmin' && tokens.superadmin) {\n        console.log('Super Admin Access');\n        setUserToken(tokens.superadmin.token || null);\n      } else if (userRole === 'admin' && tokens.admin) {\n        console.log('Admin Access');\n        setUserToken(tokens.superadmin.token || null);\n      } else {\n        console.error('Invalid user role');\n      }\n    } catch (error) {\n      console.error('Code verification failed', error);\n    }\n  };\n  console.log('s', userToken);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isCodeSent ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Verification Code:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: verificationCode,\n          onChange: e => setVerificationCode(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: verifyCode,\n        children: \"Verify Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: sendVerificationCode,\n        children: \"Send Verification Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"1xzIdiPEXaIALd6F8UtO9NAURl4=\");\n_c = LoginPage;\nexport { LoginPage };\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","axios","tokens","jsxDEV","_jsxDEV","LoginPage","_s","email","setEmail","verificationCode","setVerificationCode","isCodeSent","setIsCodeSent","userRole","setUserRole","userToken","setUserToken","sendVerificationCode","response","post","secretCode","status","data","role","console","error","verifyCode","superadmin","log","token","admin","children","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/ad/Adminka/src/components/pages/LoginPage/LoginPage.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\n// import { setToken } from 'features/access/tokenSlice'; \r\n// import { useDispatch } from 'react-redux'; \r\nimport axios from 'axios'; \r\nimport tokens from './Token.json'\r\n\r\nconst LoginPage = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [verificationCode, setVerificationCode] = useState('');\r\n  const [isCodeSent, setIsCodeSent] = useState(false);\r\n  const [userRole, setUserRole] = useState<string | null>(null);\r\n  const [userToken, setUserToken] = useState<string | null>(null);\r\n  \r\n  // type ResponseData = {\r\n  //   status: string;\r\n  //   data: {\r\n  //     token: string;\r\n  //   };\r\n  // }\r\n  // const dispatch = useDispatch();\r\n//   const validPassword = async (): Promise<boolean> => {\r\n//     try {\r\n//       const response: AxiosResponse<ResponseData> = await axios.post(\r\n        \r\n//         'https://server-your-price-booking.onrender.com/api/acsess-to-admin/log-in-admin/',\r\n//         {\r\n//           email: `${email}`,\r\n//           secretCode: verificationCode,\r\n//         }\r\n        \r\n//       );\r\n\r\n//       const { status, data } = response.data;\r\n//     dispatch(setToken(data.token));\r\n//     setUserToken(data.token);\r\n\r\n//     return status === 'success';\r\n//   } catch (error) {\r\n//     console.error('Error while verifying the secret code', error);\r\n//     return false;\r\n//   }\r\n// };\r\n  // const sendVerificationCode = async () => {\r\n  //  if(!(await validPassword())){\r\n  //   console.log('error');\r\n  //  }\r\n  //  else{\r\n  //   setIsCodeSent(true);\r\n  //  }\r\n  // };\r\n  const sendVerificationCode = async () => {\r\n    // Send a request to the server to verify the email and receive the user's role.\r\n    try {\r\n      const response = await axios.post(\r\n        'https://server-your-price-booking.onrender.com/api/acsess-to-admin/log-in-admin/',\r\n        {\r\n          email: `${email}`,\r\n          secretCode: verificationCode,\r\n        }\r\n      );\r\n  \r\n      const { status, data } = response.data;\r\n      \r\n      // Assuming the response contains the user's role\r\n      const userRole = data.role;\r\n  \r\n      if (status === 'success') {\r\n        setIsCodeSent(true);\r\n        setUserRole(userRole);\r\n      } else {\r\n        console.error('Verification failed');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error while verifying the secret code', error);\r\n    }\r\n  };\r\n  const verifyCode = async () => {\r\n    try {\r\n      if (userRole === 'superadmin' && tokens.superadmin) {\r\n        console.log('Super Admin Access');\r\n        setUserToken(tokens.superadmin.token || null);\r\n      } else if (userRole === 'admin' && tokens.admin) {\r\n        console.log('Admin Access');\r\n        setUserToken(tokens.superadmin.token || null);\r\n      } else {\r\n        console.error('Invalid user role');\r\n      }\r\n    } catch (error) {\r\n      console.error('Code verification failed', error);\r\n    }\r\n  };\r\nconsole.log('s',userToken);\r\n  return (\r\n    <div>\r\n      {isCodeSent ? (\r\n        <div>\r\n          <label>Email:\r\n            <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n          </label>\r\n          <label>Verification Code:\r\n            <input type=\"text\" value={verificationCode} onChange={(e) => setVerificationCode(e.target.value)} />\r\n          </label>\r\n          <button type=\"button\" onClick={verifyCode}>Verify Code</button>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <label>Email:\r\n            <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n          </label>\r\n          <button type=\"button\" onClick={sendVerificationCode}>Send Verification Code</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { LoginPage };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}