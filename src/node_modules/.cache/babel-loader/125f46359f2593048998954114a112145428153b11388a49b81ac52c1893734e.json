{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { fetchStatistic } from './statisticOperation';\nconst statisticInitialState = {\n  statistic: {\n    result: {\n      objectOnVerification: 0,\n      amount: {\n        users: 0,\n        hoteliers: 0,\n        agents: 0\n      },\n      activeObject: 0,\n      amountOfBookingOption: 0\n    }\n  },\n  isLoadingStatistic: false,\n  error: null\n};\nconst statisticSlice = createSlice({\n  name: 'statistic',\n  initialState: statisticInitialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchStatistic.pending, state => {\n      state.isLoadingStatistic = true;\n    }).addCase(fetchStatistic.fulfilled, (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      state.isLoadingStatistic = false;\n      state.statistic = {\n        ...payload\n      };\n    }).addCase(fetchStatistic.rejected, (state, _ref2) => {\n      let {\n        payload\n      } = _ref2;\n      state.isLoadingStatistic = false;\n      state.error = payload;\n    });\n  }\n});\nexport const statisticReducer = statisticSlice.reducer;","map":{"version":3,"names":["createSlice","fetchStatistic","statisticInitialState","statistic","result","objectOnVerification","amount","users","hoteliers","agents","activeObject","amountOfBookingOption","isLoadingStatistic","error","statisticSlice","name","initialState","reducers","extraReducers","builder","addCase","pending","state","fulfilled","_ref","payload","rejected","_ref2","statisticReducer","reducer"],"sources":["D:/ad/Adminka/src/features/statistic/statisticSlice.ts"],"sourcesContent":["import type { StatisticState, ResponseStatisticData } from 'types/apis/statistic';\nimport type { PayloadAction } from '@reduxjs/toolkit';\nimport { createSlice } from '@reduxjs/toolkit';\nimport { fetchStatistic } from './statisticOperation';\n\nconst statisticInitialState: StatisticState = {\n  statistic: {\n    result: {\n      objectOnVerification: 0,\n      amount: {\n        users: 0,\n        hoteliers: 0,\n        agents: 0,\n      },\n      activeObject: 0,\n      amountOfBookingOption: 0,\n    },\n  },\n\n  isLoadingStatistic: false,\n  error: null,\n};\n\nconst statisticSlice = createSlice({\n  name: 'statistic',\n  initialState: statisticInitialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder\n      .addCase(fetchStatistic.pending, state => {\n        state.isLoadingStatistic = true;\n      })\n      .addCase(\n        fetchStatistic.fulfilled,\n        (state, { payload }: PayloadAction<ResponseStatisticData>) => {\n          state.isLoadingStatistic = false;\n          state.statistic = { ...payload };\n        }\n      )\n      .addCase(fetchStatistic.rejected, (state, { payload }) => {\n        state.isLoadingStatistic = false;\n        state.error = payload;\n      });\n  },\n});\n\nexport const statisticReducer = statisticSlice.reducer;\n"],"mappings":"AAEA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,cAAc,QAAQ,sBAAsB;AAErD,MAAMC,qBAAqC,GAAG;EAC5CC,SAAS,EAAE;IACTC,MAAM,EAAE;MACNC,oBAAoB,EAAE,CAAC;MACvBC,MAAM,EAAE;QACNC,KAAK,EAAE,CAAC;QACRC,SAAS,EAAE,CAAC;QACZC,MAAM,EAAE;MACV,CAAC;MACDC,YAAY,EAAE,CAAC;MACfC,qBAAqB,EAAE;IACzB;EACF,CAAC;EAEDC,kBAAkB,EAAE,KAAK;EACzBC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,cAAc,GAAGd,WAAW,CAAC;EACjCe,IAAI,EAAE,WAAW;EACjBC,YAAY,EAAEd,qBAAqB;EACnCe,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAEC,OAAO,IAAI;IACxBA,OAAO,CACJC,OAAO,CAACnB,cAAc,CAACoB,OAAO,EAAEC,KAAK,IAAI;MACxCA,KAAK,CAACV,kBAAkB,GAAG,IAAI;IACjC,CAAC,CAAC,CACDQ,OAAO,CACNnB,cAAc,CAACsB,SAAS,EACxB,CAACD,KAAK,EAAAE,IAAA,KAAwD;MAAA,IAAtD;QAAEC;MAA8C,CAAC,GAAAD,IAAA;MACvDF,KAAK,CAACV,kBAAkB,GAAG,KAAK;MAChCU,KAAK,CAACnB,SAAS,GAAG;QAAE,GAAGsB;MAAQ,CAAC;IAClC,CACF,CAAC,CACAL,OAAO,CAACnB,cAAc,CAACyB,QAAQ,EAAE,CAACJ,KAAK,EAAAK,KAAA,KAAkB;MAAA,IAAhB;QAAEF;MAAQ,CAAC,GAAAE,KAAA;MACnDL,KAAK,CAACV,kBAAkB,GAAG,KAAK;MAChCU,KAAK,CAACT,KAAK,GAAGY,OAAO;IACvB,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAMG,gBAAgB,GAAGd,cAAc,CAACe,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}