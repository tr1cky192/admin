{"ast":null,"code":"var _jsxFileName = \"D:\\\\ad\\\\Adminka\\\\src\\\\components\\\\pages\\\\StatisticsPage\\\\Users\\\\UsersList\\\\UsersList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n// import { useSelector } from 'react-redux';\n// import { fetchHotelsById } from 'features/hoteliers/hoteliersOperation';\n// import { useAppDispatch } from 'App';\n// import { selectorHoteliers } from 'features/hoteliers/hoteliersSelectors';\nimport { Spinner } from 'components/shared/Loader';\nimport { Inner, TextContent, TextID, Wrapper, WrapperText, SearchButton, InputSearch, Fun, InputContainer, IconScrh, LabelFormed, ClearButtoned } from './UsersList.styled';\nimport pi from '../../../../../assets/icons/pict.svg';\n// import exo from '../../../../../assets/icons/x.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UsersList = _ref => {\n  _s();\n  let {\n    type,\n    isShowUsers,\n    searchQuery,\n    onSearch\n  } = _ref;\n  // const dispatch = useAppDispatch();\n  // const { hoteliers, isLoadingHotels } = useSelector(selectorHoteliers);\n  // console.log(hoteliers)\n  const [isSearchClicked, setIsSearchClicked] = useState(false);\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const handleSearchClick = () => {\n    setIsSearchClicked(true);\n  };\n  const fetchData = async () => {\n    setIsLoading(true);\n    try {\n      const response = await fetch('https://server-your-price-booking.onrender.com/api/acsess-to-admin/get-all-users');\n      if (response.ok) {\n        const result = await response.json(); // Explicit type casting\n        await setData(result); // Await the setData call\n      } else {\n        // Handle the error if response.ok is not true\n        throw new Error('Network response was not OK');\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // useEffect(() => {\n  //   if (hoteliers.length > 0) hoteliers.map(({ owner }) => dispatch(fetchHotelsById(owner)));\n  //   // eslint-disable-next-line\n  // }, [dispatch]);\n\n  // const data: DataProp[] = [\n  //   {\n  //     name: 'Hopin Viktoria',\n  //     id: '7874567GHV',\n  //   },\n  //   {\n  //     name: 'Klinton Bill',\n  //     id: '1123467LON',\n  //   },\n  //   {\n  //     name: 'Buch Viktoria',\n  //     id: '9889T567KI',\n  //   },\n  //   {\n  //     name: 'Klinton Sofia',\n  //     id: '1123467LON',\n  //   },\n  // ];\n\n  const filteredData = searchQuery ? data.filter(item => item.name.toLowerCase().includes(searchQuery.toLowerCase())) : data;\n  const handleClearClick = () => {\n    setIsSearchClicked(false);\n    onSearch('');\n  };\n  const displayData = isSearchClicked ? filteredData : data;\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Fun, {\n      children: /*#__PURE__*/_jsxDEV(InputContainer, {\n        children: [/*#__PURE__*/_jsxDEV(InputSearch, {\n          className: \"input\",\n          type: \"text\",\n          placeholder: \"Search ID Hoteliers or/and Name object\",\n          value: searchQuery,\n          onChange: e => onSearch(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LabelFormed, {\n          className: \"label\",\n          htmlFor: \"input-id\",\n          children: \"Search ID Hoteliers or/and Name object\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconScrh, {\n          src: pi,\n          alt: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), searchQuery && /*#__PURE__*/_jsxDEV(ClearButtoned, {\n          type: \"button\",\n          onClick: handleClearClick,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(SearchButton, {\n          onClick: handleSearchClick,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this) : displayData.length > 0 && displayData.map((_ref2, index) => {\n      let {\n        name,\n        id\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(Inner, {\n        border: isShowUsers === index,\n        hidden: isShowUsers !== index && isShowUsers !== null,\n        position: isShowUsers !== null,\n        tabIndex: index,\n        children: [/*#__PURE__*/_jsxDEV(TextID, {\n          tabIndex: index,\n          children: [\"ID \", id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(WrapperText, {\n          tabIndex: index,\n          typePage: type,\n          children: /*#__PURE__*/_jsxDEV(TextContent, {\n            tabIndex: index,\n            children: [isShowUsers && /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 33\n            }, this), !isShowUsers && isShowUsers !== index && (name && name.length > 20 ? name.slice(0, 6) : name)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)]\n      }, name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 7\n  }, this);\n};\n_s(UsersList, \"HZLclCBUPIg+D0tHmd0Y2wezn1A=\");\n_c = UsersList;\nvar _c;\n$RefreshReg$(_c, \"UsersList\");","map":{"version":3,"names":["React","useState","useEffect","Spinner","Inner","TextContent","TextID","Wrapper","WrapperText","SearchButton","InputSearch","Fun","InputContainer","IconScrh","LabelFormed","ClearButtoned","pi","jsxDEV","_jsxDEV","UsersList","_ref","_s","type","isShowUsers","searchQuery","onSearch","isSearchClicked","setIsSearchClicked","data","setData","isLoading","setIsLoading","handleSearchClick","fetchData","response","fetch","ok","result","json","Error","error","console","filteredData","filter","item","name","toLowerCase","includes","handleClearClick","displayData","children","className","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","src","alt","onClick","length","map","_ref2","index","id","border","hidden","position","tabIndex","typePage","slice","_c","$RefreshReg$"],"sources":["D:/ad/Adminka/src/components/pages/StatisticsPage/Users/UsersList/UsersList.tsx"],"sourcesContent":["\nimport React, { useState, useEffect } from 'react';\n// import { useSelector } from 'react-redux';\n// import { fetchHotelsById } from 'features/hoteliers/hoteliersOperation';\n// import { useAppDispatch } from 'App';\n// import { selectorHoteliers } from 'features/hoteliers/hoteliersSelectors';\nimport { Spinner } from 'components/shared/Loader';\nimport { Inner, TextContent, TextID, Wrapper, WrapperText, SearchButton,InputSearch,Fun,InputContainer,IconScrh, LabelFormed,ClearButtoned } from './UsersList.styled';\nimport pi from '../../../../../assets/icons/pict.svg';\n// import exo from '../../../../../assets/icons/x.svg';\ntype Prop = {\n    type?: string;\n  isShowUsers?: number | null;\n  \n};\n\nexport type DataProp = {\n  name: string;\n  id: string;\n}\n\n\nexport const UsersList: React.FC<Prop & { searchQuery?: string, onSearch: (query: string)=> void }> = ({ type, isShowUsers, searchQuery, onSearch }) => {\n    // const dispatch = useAppDispatch();\n    // const { hoteliers, isLoadingHotels } = useSelector(selectorHoteliers);\n    // console.log(hoteliers)\n    const [isSearchClicked, setIsSearchClicked] = useState(false);\n    const [data, setData] = useState<DataProp[]>([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const handleSearchClick = () => {\n      setIsSearchClicked(true);\n    };\n    const fetchData = async () => {\n      setIsLoading(true);\n      try {\n        const response = await fetch('https://server-your-price-booking.onrender.com/api/acsess-to-admin/get-all-users');\n        if (response.ok) {\n          const result = await response.json() as DataProp[]; // Explicit type casting\n          await setData(result); // Await the setData call\n        } else {\n          // Handle the error if response.ok is not true\n          throw new Error('Network response was not OK');\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    // useEffect(() => {\n    //   if (hoteliers.length > 0) hoteliers.map(({ owner }) => dispatch(fetchHotelsById(owner)));\n    //   // eslint-disable-next-line\n    // }, [dispatch]);\n  \n    // const data: DataProp[] = [\n    //   {\n    //     name: 'Hopin Viktoria',\n    //     id: '7874567GHV',\n    //   },\n    //   {\n    //     name: 'Klinton Bill',\n    //     id: '1123467LON',\n    //   },\n    //   {\n    //     name: 'Buch Viktoria',\n    //     id: '9889T567KI',\n    //   },\n    //   {\n    //     name: 'Klinton Sofia',\n    //     id: '1123467LON',\n    //   },\n    // ];\n\n\n    const filteredData = searchQuery\n    ? data.filter((item) => item.name.toLowerCase().includes(searchQuery.toLowerCase()))\n    : data;\n    const handleClearClick = () => {\n      setIsSearchClicked(false);\n      onSearch(''); \n    };\n    const displayData = isSearchClicked ? filteredData : data; \n    useEffect(() => {fetchData();}, []);\n    return (\n      <Wrapper>\n      <Fun>\n        <InputContainer>\n          <InputSearch\n            className=\"input\"\n            type=\"text\"\n            placeholder=\"Search ID Hoteliers or/and Name object\"\n            value={searchQuery}\n            onChange={(e) => onSearch(e.target.value)}\n          />\n          <LabelFormed className=\"label\" htmlFor=\"input-id\">\n            Search ID Hoteliers or/and Name object\n          </LabelFormed>\n          <IconScrh src={pi} alt=\"Search\" />\n          {searchQuery && <ClearButtoned type=\"button\" onClick={handleClearClick}>\n            Close\n          </ClearButtoned>}\n          <SearchButton onClick={handleSearchClick}>Search</SearchButton>\n        </InputContainer>\n      </Fun>\n      {isLoading ? (\n        <Spinner />\n      ) : (\n        displayData.length > 0 &&\n        displayData.map(({ name, id }, index) => (\n          <Inner\n            border={isShowUsers === index}\n            hidden={isShowUsers !== index && isShowUsers !== null}\n            position={isShowUsers !== null}\n            key={name}\n            tabIndex={index}\n          >\n            <TextID tabIndex={index}>ID {id}</TextID>\n            <WrapperText tabIndex={index} typePage={type}>\n              <TextContent tabIndex={index}>\n                {isShowUsers && <Spinner />}\n                {!isShowUsers && isShowUsers !== index && (name && name.length > 20 ? name.slice(0, 6) : name)}\n              </TextContent>\n            </WrapperText>\n          </Inner>\n        ))\n      )}\n    </Wrapper>\n    );\n} \n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}