{"ast":null,"code":"var _jsxFileName = \"D:\\\\ad\\\\Adminka\\\\src\\\\components\\\\pages\\\\StatisticsPage\\\\Users\\\\UsersList\\\\UsersList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Spinner } from 'components/shared/Loader';\nimport { Inner, TextContent, TextID, Wrapper, WrapperText, SearchButton, InputSearch, Fun, InputContainer, IconScrh, LabelFormed, ClearButtoned } from './UsersList.styled';\nimport pi from '../../../../../assets/icons/pict.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UsersList = _ref => {\n  _s();\n  let {\n    type,\n    isShowUsers,\n    searchQuery,\n    onSearch\n  } = _ref;\n  const [data, setData] = useState([]); // State to hold the fetched data\n  const [isLoading, setIsLoading] = useState(true);\n  const [isSearchClicked, setIsSearchClicked] = useState(false);\n  useEffect(() => {\n    // Fetch data from the API when the component mounts\n    fetch('https://server-your-price-booking.onrender.com/api/acsess-to-admin/get-all-users').then(response => response.json()).then(user => {\n      setData([user]); // Set the fetched data in the state\n      setIsLoading(false); // Mark loading as complete\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n      setIsLoading(false); // Mark loading as complete, even on error\n    });\n  }, []);\n  const handleSearchClick = () => {\n    setIsSearchClicked(true);\n  };\n  const handleClearClick = () => {\n    setIsSearchClicked(false); // Reset the search flag when the input is cleared\n    onSearch(''); // Clear the search query\n  };\n\n  const filteredData = searchQuery ? data.filter(item => item && item.name && item.name.toLowerCase().includes(searchQuery.toLowerCase())) : data;\n  const displayData = isSearchClicked ? filteredData : data;\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Fun, {\n      children: /*#__PURE__*/_jsxDEV(InputContainer, {\n        children: [/*#__PURE__*/_jsxDEV(InputSearch, {\n          className: \"input\",\n          type: \"text\",\n          placeholder: \"Search ID Hoteliers or/and Name object\",\n          value: searchQuery,\n          onChange: e => onSearch(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LabelFormed, {\n          className: \"label\",\n          htmlFor: \"input-id\",\n          children: \"Search ID Hoteliers or/and Name object\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconScrh, {\n          src: pi,\n          alt: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), searchQuery && /*#__PURE__*/_jsxDEV(ClearButtoned, {\n          type: \"button\",\n          onClick: handleClearClick,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SearchButton, {\n          onClick: handleSearchClick,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), displayData.length > 0 && displayData.map((_ref2, index) => {\n      let {\n        name,\n        id\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(Inner, {\n        // Add a unique key prop using the 'id' property\n        border: isShowUsers === index,\n        hidden: isShowUsers !== index && isShowUsers !== null,\n        position: isShowUsers !== null,\n        tabIndex: index // Add a unique tabIndex\n        ,\n        children: [/*#__PURE__*/_jsxDEV(TextID, {\n          tabIndex: index,\n          children: [\"ID \", id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(WrapperText, {\n          tabIndex: index,\n          typePage: type,\n          children: /*#__PURE__*/_jsxDEV(TextContent, {\n            tabIndex: index,\n            children: isLoading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 24\n            }, this) : name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 7\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(UsersList, \"ULR7mIRQyyYfJlUe86b1eRjWNyI=\");\n_c = UsersList;\nvar _c;\n$RefreshReg$(_c, \"UsersList\");","map":{"version":3,"names":["React","useState","useEffect","Spinner","Inner","TextContent","TextID","Wrapper","WrapperText","SearchButton","InputSearch","Fun","InputContainer","IconScrh","LabelFormed","ClearButtoned","pi","jsxDEV","_jsxDEV","UsersList","_ref","_s","type","isShowUsers","searchQuery","onSearch","data","setData","isLoading","setIsLoading","isSearchClicked","setIsSearchClicked","fetch","then","response","json","user","catch","error","console","handleSearchClick","handleClearClick","filteredData","filter","item","name","toLowerCase","includes","displayData","children","className","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","src","alt","onClick","length","map","_ref2","index","id","border","hidden","position","tabIndex","typePage","_c","$RefreshReg$"],"sources":["D:/ad/Adminka/src/components/pages/StatisticsPage/Users/UsersList/UsersList.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Spinner } from 'components/shared/Loader';\nimport { Inner, TextContent, TextID, Wrapper, WrapperText, SearchButton, InputSearch, Fun, InputContainer, IconScrh, LabelFormed, ClearButtoned } from './UsersList.styled';\nimport pi from '../../../../../assets/icons/pict.svg';\n\ntype Prop = {\n  type?: string;\n  isShowUsers?: number | null;\n};\n\nexport type DataProp = {\n  name: string;\n  id: string;\n}\n\nexport const UsersList: React.FC<Prop & { searchQuery?: string, onSearch: (query: string) => void }> = ({ type, isShowUsers, searchQuery, onSearch }) => {\n  const [data, setData] = useState<DataProp[]>([]); // State to hold the fetched data\n  const [isLoading, setIsLoading] = useState(true);\n  const [isSearchClicked, setIsSearchClicked] = useState(false);\n\n  useEffect(() => {\n    // Fetch data from the API when the component mounts\n    fetch('https://server-your-price-booking.onrender.com/api/acsess-to-admin/get-all-users')\n      .then(response => response.json())\n      .then(user => {\n        setData([user]); // Set the fetched data in the state\n        setIsLoading(false); // Mark loading as complete\n\n      })\n      .catch(error => {\n        console.error('Error fetching data:', error);\n        setIsLoading(false); // Mark loading as complete, even on error\n      });\n  }, []);\n\n  const handleSearchClick = () => {\n    setIsSearchClicked(true);\n  };\n\n  const handleClearClick = () => {\n    setIsSearchClicked(false); // Reset the search flag when the input is cleared\n    onSearch(''); // Clear the search query\n  };\n\n  const filteredData = searchQuery\n  ? data.filter((item) => item && item.name && item.name.toLowerCase().includes(searchQuery.toLowerCase()))\n  : data;\n\n  const displayData = isSearchClicked ? filteredData : data;\n\n  return (\n    <Wrapper>\n      <Fun>\n        <InputContainer>\n          <InputSearch\n            className=\"input\"\n            type=\"text\"\n            placeholder=\"Search ID Hoteliers or/and Name object\"\n            value={searchQuery}\n            onChange={(e) => onSearch(e.target.value)}\n          />\n          <LabelFormed className=\"label\" htmlFor=\"input-id\">Search ID Hoteliers or/and Name object</LabelFormed>\n          <IconScrh src={pi} alt=\"Search\" />\n          {searchQuery && (\n            <ClearButtoned type=\"button\" onClick={handleClearClick}>Close</ClearButtoned>\n          )}\n          <SearchButton onClick={handleSearchClick}>Search</SearchButton>\n        </InputContainer>\n      </Fun>\n      {displayData.length > 0 &&\n  displayData.map(({ name, id }, index) => (\n    <Inner\n      key={id} // Add a unique key prop using the 'id' property\n      border={isShowUsers === index}\n      hidden={isShowUsers !== index && isShowUsers !== null}\n      position={isShowUsers !== null}\n      tabIndex={index} // Add a unique tabIndex\n    >\n      <TextID tabIndex={index}>ID {id}</TextID>\n      <WrapperText tabIndex={index} typePage={type}>\n        <TextContent tabIndex={index}>\n          {isLoading ? <Spinner /> : name}\n        </TextContent>\n      </WrapperText>\n    </Inner>\n  ))}\n    </Wrapper>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}