{"ast":null,"code":"var _jsxFileName = \"D:\\\\ad\\\\Adminka\\\\src\\\\components\\\\pages\\\\Access\\\\PasswordField\\\\PasswordField.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useRef } from 'react';\nimport { setToken } from 'features/access/tokenSlice';\nimport { useAppDispatch } from 'App';\nimport { Input, EnterPass, VerifPass, PasswordFieldWrapper, NotVerifPass } from './PasswordField.styled';\nimport { Button } from '../Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst staticAdminData = {\n  \"status\": \"success\",\n  \"code\": 200,\n  \"user\": {\n    \"_id\": \"6536cb40578c40e354fad54d\",\n    \"access\": [\"Statistics and access to cabinets\"],\n    \"status\": \"active\",\n    \"role\": \"admin\",\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1MzZjYjQwNTc4YzQwZTM1NGZhZDU0ZCIsImlhdCI6MTY5ODMwNzM5MywiZXhwIjoxNjk4MzEwOTkzfQ.TCMVGYiMMW5kwrAWyxblT98fTcXAT8CPA2rJADZYUZw\"\n  }\n};\nexport const PasswordField = _ref => {\n  _s();\n  let {\n    setIsSend,\n    email\n  } = _ref;\n  const [passwordCode, setPasswordCode] = useState('');\n  const [messagePass, setMessagePass] = useState('');\n  const formRef = useRef(null);\n  const dispatch = useAppDispatch();\n  const validPassword = async () => {\n    try {\n      // Replace the actual Axios request with the static data\n      const customResponse = {\n        data: {\n          status: staticAdminData.status,\n          data: {\n            token: staticAdminData.user.token\n          },\n          user: {\n            role: staticAdminData.user.role\n          }\n        },\n        status: 200,\n        statusText: 'OK',\n        headers: {\n          'content-type': 'application/json'\n        },\n        config: {\n          headers: {\n            Accept: 'application/json, text/plain, */*'\n          }\n        }\n      };\n      const {\n        status,\n        data\n      } = customResponse.data;\n      dispatch(setToken(data.token));\n      return status === 'success';\n    } catch (error) {\n      console.error('Помилка під час перевірки секретного коду', error);\n      return false;\n    }\n  };\n  const handleVerificationCodeChange = e => {\n    setPasswordCode(e.target.value);\n  };\n  const handlePasswordSubmit = async e => {\n    e.preventDefault();\n    if (!(await validPassword())) {\n      setMessagePass('You entered a wrong verification code, try again');\n    } else {\n      setIsSend(true);\n      // navigate('/');\n    }\n  };\n\n  const handleKeyUp = useCallback(e => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      if (formRef.current) {\n        formRef.current.dispatchEvent(new Event('submit', {\n          cancelable: true\n        }));\n      }\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(PasswordFieldWrapper, {\n    children: [messagePass ? /*#__PURE__*/_jsxDEV(NotVerifPass, {\n      children: messagePass\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(EnterPass, {\n      children: \"Enter the verification code we sent to your email address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handlePasswordSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        name: \"verificationCode\",\n        value: passwordCode,\n        onChange: handleVerificationCodeChange,\n        required: true,\n        onKeyDown: handleKeyUp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VerifPass, {\n      children: \"Verification code - valid for 3 minutes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s(PasswordField, \"NsT1RKp7+sP9dHzAeFcwBfaj9g0=\", false, function () {\n  return [useAppDispatch];\n});\n_c = PasswordField;\nvar _c;\n$RefreshReg$(_c, \"PasswordField\");","map":{"version":3,"names":["React","useState","useCallback","useRef","setToken","useAppDispatch","Input","EnterPass","VerifPass","PasswordFieldWrapper","NotVerifPass","Button","jsxDEV","_jsxDEV","staticAdminData","PasswordField","_ref","_s","setIsSend","email","passwordCode","setPasswordCode","messagePass","setMessagePass","formRef","dispatch","validPassword","customResponse","data","status","token","user","role","statusText","headers","config","Accept","error","console","handleVerificationCodeChange","e","target","value","handlePasswordSubmit","preventDefault","handleKeyUp","key","current","dispatchEvent","Event","cancelable","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","name","onChange","required","onKeyDown","_c","$RefreshReg$"],"sources":["D:/ad/Adminka/src/components/pages/Access/PasswordField/PasswordField.tsx"],"sourcesContent":["import React, { useState , useCallback, useRef } from 'react';\nimport type { AxiosResponse } from 'axios';\nimport { setToken } from 'features/access/tokenSlice';\nimport { useAppDispatch } from 'App';\nimport {\n  Input,\n  EnterPass,\n  VerifPass,\n  PasswordFieldWrapper,\n  NotVerifPass,\n} from './PasswordField.styled';\nimport { Button } from '../Button';\n\nconst staticAdminData = {\n  \"status\": \"success\",\n  \"code\": 200,\n  \"user\": {\n    \"_id\": \"6536cb40578c40e354fad54d\",\n    \"access\": [\n      \"Statistics and access to cabinets\"\n    ],\n    \"status\": \"active\",\n    \"role\": \"admin\",\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1MzZjYjQwNTc4YzQwZTM1NGZhZDU0ZCIsImlhdCI6MTY5ODMwNzM5MywiZXhwIjoxNjk4MzEwOTkzfQ.TCMVGYiMMW5kwrAWyxblT98fTcXAT8CPA2rJADZYUZw\"\n  }\n};\n\ntype ResponseData = {\n  status: string;\n  data: {\n    token: string;\n  };\n  user?: {\n    role: string;\n  };\n}\n\nexport const PasswordField: React.FC<{\n  setIsSend: React.Dispatch<React.SetStateAction<boolean>>;\n  email: string;\n}> = ({ setIsSend, email }) => {\n  const [passwordCode, setPasswordCode] = useState<string>('');\n  const [messagePass, setMessagePass] = useState<string>('');\n  const formRef = useRef<HTMLFormElement | null>(null);\n  const dispatch = useAppDispatch();\n\n  const validPassword = async (): Promise<boolean> => {\n    try {\n      // Replace the actual Axios request with the static data\n      const customResponse: AxiosResponse<ResponseData> = {\n        data: {\n          status: staticAdminData.status,\n          data: { token: staticAdminData.user.token },\n          user: { role: staticAdminData.user.role },\n        },\n        status: 200,\n        statusText: 'OK',\n        headers: {\n          'content-type': 'application/json'\n        },\n        config: {\n          headers: {\nAccept: 'application/json, text/plain, */*'\n          }\n        }\n      };\n\n      \n\n      const { status, data } = customResponse.data;\n      dispatch(setToken(data.token));\n      return status === 'success';\n    } catch (error) {\n      console.error('Помилка під час перевірки секретного коду', error);\n      return false;\n    }\n  };\n\n  const handleVerificationCodeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setPasswordCode(e.target.value);\n  };\n\n  const handlePasswordSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (!(await validPassword())) {\n      setMessagePass('You entered a wrong verification code, try again');\n    } else {\n      setIsSend(true);\n      // navigate('/');\n    }\n  };\n\n  const handleKeyUp = useCallback((e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      if (formRef.current) {\n        formRef.current.dispatchEvent(new Event('submit', { cancelable: true }));\n      }\n    }\n  }, []);\n\n  return (\n    <PasswordFieldWrapper>\n      {messagePass ? (\n        <NotVerifPass>{messagePass}</NotVerifPass>\n      ) : (\n        <EnterPass>Enter the verification code we sent to your email address</EnterPass>\n      )}\n      <form onSubmit={handlePasswordSubmit}>\n        <Input\n          type=\"text\"\n          name=\"verificationCode\"\n          value={passwordCode}\n          onChange={handleVerificationCodeChange}\n          required\n          onKeyDown={handleKeyUp}\n        />\n        <Button />\n      </form>\n      <VerifPass>Verification code - valid for 3 minutes</VerifPass>\n    </PasswordFieldWrapper>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}