{"ast":null,"code":"var _jsxFileName = \"D:\\\\ad\\\\Adminka\\\\src\\\\components\\\\pages\\\\LoginPage\\\\LoginPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [verificationCode, setVerificationCode] = useState('');\n  const [isCodeSent, setIsCodeSent] = useState(false);\n  const [userRole, setUserRole] = useState(null);\n  // const token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0NWJmOGI1ZWM4NGM0MTY1NDcxNmMzZSIsImlhdCI6MTY5ODA4OTM4OCwiZXhwIjoxNjk4MDkyOTg4fQ.OMlT1T17U4DgdsgbXs8JXmMG5Wb9ECuFL_UjAhibXjI';\n  const sendVerificationCode = async () => {\n    try {\n      setUserRole('superadmin');\n      setIsCodeSent(true);\n    } catch (error) {\n      console.error('Error sending verification code');\n    }\n  };\n  const verifyCode = async () => {\n    try {\n      if (userRole === 'super admin') {\n        // Handle super admin access.\n        console.log('Super Admin Access');\n      } else if (userRole === 'admin') {\n        // Handle admin access.\n        console.log('Admin Access');\n      } else {\n        // Handle other user roles.\n        console.error('Invalid user role');\n      }\n    } catch (error) {\n      console.error('Code verification failed');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isCodeSent ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Verification Code:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: verificationCode,\n          onChange: e => setVerificationCode(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: verifyCode,\n        children: \"Verify Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: sendVerificationCode,\n        children: \"Send Verification Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"Z7l0z8dQdu3hQ9ltmq/2FqD405o=\");\n_c = LoginPage;\nexport { LoginPage };\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","LoginPage","_s","email","setEmail","verificationCode","setVerificationCode","isCodeSent","setIsCodeSent","userRole","setUserRole","sendVerificationCode","error","console","verifyCode","log","children","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/ad/Adminka/src/components/pages/LoginPage/LoginPage.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst LoginPage = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [verificationCode, setVerificationCode] = useState('');\r\n  const [isCodeSent, setIsCodeSent] = useState(false);\r\n  const [userRole, setUserRole] = useState<string | null>(null);\r\n  // const token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0NWJmOGI1ZWM4NGM0MTY1NDcxNmMzZSIsImlhdCI6MTY5ODA4OTM4OCwiZXhwIjoxNjk4MDkyOTg4fQ.OMlT1T17U4DgdsgbXs8JXmMG5Wb9ECuFL_UjAhibXjI';\r\n  const sendVerificationCode = async () => {\r\n    try {\r\n      setUserRole('superadmin');\r\n      setIsCodeSent(true);\r\n    } catch (error) {\r\n      console.error('Error sending verification code');\r\n    }\r\n  };\r\n  const verifyCode = async () => {\r\n    try {\r\n      if (userRole === 'super admin') {\r\n        // Handle super admin access.\r\n        console.log('Super Admin Access');\r\n      } else if (userRole === 'admin') {\r\n        // Handle admin access.\r\n        console.log('Admin Access');\r\n      } else {\r\n        // Handle other user roles.\r\n        console.error('Invalid user role');\r\n      }\r\n    } catch (error) {\r\n      console.error('Code verification failed');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isCodeSent ? (\r\n        <div>\r\n          <label>Email:\r\n            <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n          </label>\r\n          <label>Verification Code:\r\n            <input type=\"text\" value={verificationCode} onChange={(e) => setVerificationCode(e.target.value)} />\r\n          </label>\r\n          <button type = \"button\" onClick={verifyCode}>Verify Code</button>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <label>Email:\r\n            <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n          </label>\r\n          <button type=\"button\" onClick={sendVerificationCode}>Send Verification Code</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport{LoginPage};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}