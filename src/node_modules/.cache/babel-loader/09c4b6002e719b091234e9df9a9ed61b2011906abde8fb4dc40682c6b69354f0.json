{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: {\n    token: null\n  },\n  reducers: {\n    setToken: (state, action) => {\n      state.token = action.payload;\n    }\n  }\n});\nexport const {\n  setToken\n} = authSlice.actions;\nexport const tokenReducer = authSlice.reducer;\nexport const selectEmailSlice = state => state.enterToken.token;","map":{"version":3,"names":["createSlice","authSlice","name","initialState","token","reducers","setToken","state","action","payload","actions","tokenReducer","reducer","selectEmailSlice","enterToken"],"sources":["D:/ad/Adminka/src/features/access/tokenSlice.ts"],"sourcesContent":["import type { PayloadAction } from '@reduxjs/toolkit';\nimport { createSlice } from '@reduxjs/toolkit';\nimport type { RootState } from 'App/store';\n\ntype AuthState = {\n  token: string | null;\n}\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: { token: null },\n  reducers: {\n    setToken: (state, action) => {\n      state.token = action.payload;\n    },\n  },\n});\n\nexport const { setToken } = authSlice.actions;\nexport const tokenReducer = authSlice.reducer;\nexport const selectEmailSlice = (state: RootState) => state.enterToken.token;"],"mappings":"AACA,SAASA,WAAW,QAAQ,kBAAkB;AAO9C,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC5BE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IAAEC,KAAK,EAAE;EAAK,CAAC;EAC7BC,QAAQ,EAAE;IACRC,QAAQ,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC3BD,KAAK,CAACH,KAAK,GAAGI,MAAM,CAACC,OAAO;IAC9B;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH;AAAS,CAAC,GAAGL,SAAS,CAACS,OAAO;AAC7C,OAAO,MAAMC,YAAY,GAAGV,SAAS,CAACW,OAAO;AAC7C,OAAO,MAAMC,gBAAgB,GAAIN,KAAgB,IAAKA,KAAK,CAACO,UAAU,CAACV,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}