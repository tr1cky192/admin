{"ast":null,"code":"var _jsxFileName = \"D:\\\\ad\\\\Adminka\\\\src\\\\components\\\\pages\\\\StatisticsPage\\\\Users\\\\UsersList\\\\UsersList.tsx\";\nimport React from 'react';\n// import { useSelector } from 'react-redux';\n// import { fetchHotelsById } from 'features/hoteliers/hoteliersOperation';\n// import { useAppDispatch } from 'App';\n// import { selectorHoteliers } from 'features/hoteliers/hoteliersSelectors';\nimport { Spinner } from 'components/shared/Loader';\nimport { Inner, TextContent, TextID, Wrapper, WrapperText } from './UsersList.styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UsersList = _ref => {\n  let {\n    type,\n    isShowUsers,\n    searchQuery\n  } = _ref;\n  // const dispatch = useAppDispatch();\n  // const { hoteliers, isLoadingHotels } = useSelector(selectorHoteliers);\n  // console.log(hoteliers)\n\n  // useEffect(() => {\n  //   if (hoteliers.length > 0) hoteliers.map(({ owner }) => dispatch(fetchHotelsById(owner)));\n  //   // eslint-disable-next-line\n  // }, [dispatch]);\n\n  const data = [{\n    name: 'Hopin Viktoria',\n    id: '7874567GHV'\n  }, {\n    name: 'Klinton Bill',\n    id: '1123467LON'\n  }, {\n    name: 'Buch Viktoria',\n    id: '9889T567KI'\n  }, {\n    name: 'Klinton Sofia',\n    id: '1123467LON'\n  }];\n  const filteredData = searchQuery ? data.filter(item => item.name.toLowerCase().includes(searchQuery.toLowerCase())) : data;\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: filteredData.length > 0 && filteredData.map((_ref2, index) => {\n      let {\n        name,\n        id\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(Inner, {\n        border: isShowUsers === index,\n        hidden: isShowUsers !== index && isShowUsers !== null,\n        position: isShowUsers !== null,\n        tabIndex: index,\n        children: [/*#__PURE__*/_jsxDEV(TextID, {\n          tabIndex: index,\n          children: [\"ID \", id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(WrapperText, {\n          tabIndex: index,\n          typePage: type,\n          children: /*#__PURE__*/_jsxDEV(TextContent, {\n            tabIndex: index,\n            children: [isShowUsers && /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 35\n            }, this), !isShowUsers && isShowUsers !== index && (name && name.length > 20 ? name.slice(0, 6) : name)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this)]\n      }, name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 7\n  }, this);\n};\n_c = UsersList;\nvar _c;\n$RefreshReg$(_c, \"UsersList\");","map":{"version":3,"names":["React","Spinner","Inner","TextContent","TextID","Wrapper","WrapperText","jsxDEV","_jsxDEV","UsersList","_ref","type","isShowUsers","searchQuery","data","name","id","filteredData","filter","item","toLowerCase","includes","children","length","map","_ref2","index","border","hidden","position","tabIndex","fileName","_jsxFileName","lineNumber","columnNumber","typePage","slice","_c","$RefreshReg$"],"sources":["D:/ad/Adminka/src/components/pages/StatisticsPage/Users/UsersList/UsersList.tsx"],"sourcesContent":["\nimport React, { useState } from 'react';\n// import { useSelector } from 'react-redux';\n// import { fetchHotelsById } from 'features/hoteliers/hoteliersOperation';\n// import { useAppDispatch } from 'App';\n// import { selectorHoteliers } from 'features/hoteliers/hoteliersSelectors';\nimport { Spinner } from 'components/shared/Loader';\nimport { Inner, TextContent, TextID, Wrapper, WrapperText } from './UsersList.styled';\n\n\ntype Prop = {\n    type?: string;\n  isShowUsers?: number | null;\n  \n};\n\ntype DataProp = {\n  name: string;\n  id: string;\n}\n\n\nexport const UsersList: React.FC<Prop & { searchQuery?: string }> = ({ type, isShowUsers, searchQuery }) => {\n    // const dispatch = useAppDispatch();\n    // const { hoteliers, isLoadingHotels } = useSelector(selectorHoteliers);\n    // console.log(hoteliers)\n\n\n\n    // useEffect(() => {\n    //   if (hoteliers.length > 0) hoteliers.map(({ owner }) => dispatch(fetchHotelsById(owner)));\n    //   // eslint-disable-next-line\n    // }, [dispatch]);\n\n    const data: DataProp[] = [\n      {\n        name: 'Hopin Viktoria',\n        id: '7874567GHV',\n      },\n      {\n        name: 'Klinton Bill',\n        id: '1123467LON',\n      },\n      {\n        name: 'Buch Viktoria',\n        id: '9889T567KI',\n      },\n      {\n        name: 'Klinton Sofia',\n        id: '1123467LON',\n      },\n    ];\n    const filteredData = searchQuery\n    ? data.filter((item) => item.name.toLowerCase().includes(searchQuery.toLowerCase()))\n    : data;\n\n    return (\n      <Wrapper>\n        {filteredData.length > 0 &&\n          filteredData.map(({ name,id }, index) => (\n            <Inner\n              border={isShowUsers === index}\n              hidden={isShowUsers !== index && isShowUsers !== null}\n              position={isShowUsers !== null}\n              key={name}\n              tabIndex={index}\n            >\n              <TextID tabIndex={index}>ID {id}</TextID>\n              <WrapperText tabIndex={index} typePage={type}>\n                <TextContent tabIndex={index}>\n                  {isShowUsers && <Spinner />}\n                  {!isShowUsers &&\n                    isShowUsers !== index &&\n                    (name && name.length > 20 ? name.slice(0, 6) : name)}\n                  {/* {!isShowUsers && isShowUsers !== index && name && name.length > 0 && '...'} */}\n                </TextContent>\n              </WrapperText>\n            </Inner>\n          ))}\n      </Wrapper>\n    );\n} \n\n"],"mappings":";AACA,OAAOA,KAAK,MAAoB,OAAO;AACvC;AACA;AACA;AACA;AACA,SAASC,OAAO,QAAQ,0BAA0B;AAClD,SAASC,KAAK,EAAEC,WAAW,EAAEC,MAAM,EAAEC,OAAO,EAAEC,WAAW,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAetF,OAAO,MAAMC,SAAoD,GAAGC,IAAA,IAAwC;EAAA,IAAvC;IAAEC,IAAI;IAAEC,WAAW;IAAEC;EAAY,CAAC,GAAAH,IAAA;EACnG;EACA;EACA;;EAIA;EACA;EACA;EACA;;EAEA,MAAMI,IAAgB,GAAG,CACvB;IACEC,IAAI,EAAE,gBAAgB;IACtBC,EAAE,EAAE;EACN,CAAC,EACD;IACED,IAAI,EAAE,cAAc;IACpBC,EAAE,EAAE;EACN,CAAC,EACD;IACED,IAAI,EAAE,eAAe;IACrBC,EAAE,EAAE;EACN,CAAC,EACD;IACED,IAAI,EAAE,eAAe;IACrBC,EAAE,EAAE;EACN,CAAC,CACF;EACD,MAAMC,YAAY,GAAGJ,WAAW,GAC9BC,IAAI,CAACI,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACJ,IAAI,CAACK,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACR,WAAW,CAACO,WAAW,CAAC,CAAC,CAAC,CAAC,GAClFN,IAAI;EAEN,oBACEN,OAAA,CAACH,OAAO;IAAAiB,QAAA,EACLL,YAAY,CAACM,MAAM,GAAG,CAAC,IACtBN,YAAY,CAACO,GAAG,CAAC,CAAAC,KAAA,EAAcC,KAAK;MAAA,IAAlB;QAAEX,IAAI;QAACC;MAAG,CAAC,GAAAS,KAAA;MAAA,oBAC3BjB,OAAA,CAACN,KAAK;QACJyB,MAAM,EAAEf,WAAW,KAAKc,KAAM;QAC9BE,MAAM,EAAEhB,WAAW,KAAKc,KAAK,IAAId,WAAW,KAAK,IAAK;QACtDiB,QAAQ,EAAEjB,WAAW,KAAK,IAAK;QAE/BkB,QAAQ,EAAEJ,KAAM;QAAAJ,QAAA,gBAEhBd,OAAA,CAACJ,MAAM;UAAC0B,QAAQ,EAAEJ,KAAM;UAAAJ,QAAA,GAAC,KAAG,EAACN,EAAE;QAAA;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,eACzC1B,OAAA,CAACF,WAAW;UAACwB,QAAQ,EAAEJ,KAAM;UAACS,QAAQ,EAAExB,IAAK;UAAAW,QAAA,eAC3Cd,OAAA,CAACL,WAAW;YAAC2B,QAAQ,EAAEJ,KAAM;YAAAJ,QAAA,GAC1BV,WAAW,iBAAIJ,OAAA,CAACP,OAAO;cAAA8B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,EAC1B,CAACtB,WAAW,IACXA,WAAW,KAAKc,KAAK,KACpBX,IAAI,IAAIA,IAAI,CAACQ,MAAM,GAAG,EAAE,GAAGR,IAAI,CAACqB,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAGrB,IAAI,CAAC;UAAA;YAAAgB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAE3C;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA,GAZTnB,IAAI;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAaJ,CAAC;IAAA,CACT;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEhB,CAAC;AAAAG,EAAA,GA3DY5B,SAAoD;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}