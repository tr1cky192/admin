{"ast":null,"code":"var _jsxFileName = \"D:\\\\ad\\\\Adminka\\\\src\\\\components\\\\pages\\\\StatisticsPage\\\\Users\\\\UsersList\\\\UsersList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Spinner } from 'components/shared/Loader';\nimport { Inner, TextContent, TextID, Wrapper, WrapperText, SearchButton, InputSearch, Fun, InputContainer, IconScrh, LabelFormed, ClearButtoned } from './UsersList.styled';\nimport pi from '../../../../../assets/icons/pict.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UsersList = _ref => {\n  _s();\n  let {\n    type,\n    isShowUsers,\n    searchQuery,\n    onSearch\n  } = _ref;\n  const [data, setData] = useState([]); // State to hold the fetched data\n  const [isLoading, setIsLoading] = useState(true);\n  const [isSearchClicked, setIsSearchClicked] = useState(false);\n  useEffect(() => {\n    // Fetch data from the API when the component mounts\n    fetch('https://server-your-price-booking.onrender.com/api/acsess-to-admin/get-all-users').then(response => response.json()).then(user => {\n      const userData = {\n        id: user.id,\n        lastname: user.lastname,\n        name: user.name\n      };\n      setData([userData]);\n      console.log('Data:', userData);\n      setIsLoading(false); // Mark loading as complete\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n      setIsLoading(false); // Mark loading as complete, even on error\n    });\n  }, []);\n  const handleSearchClick = () => {\n    setIsSearchClicked(true);\n  };\n  const handleClearClick = () => {\n    setIsSearchClicked(false); // Reset the search flag when the input is cleared\n    onSearch(''); // Clear the search query\n  };\n\n  const filteredData = searchQuery ? data.filter(item => item && item.name && typeof item.name === 'string' && item.name.toLowerCase().includes(searchQuery.toLowerCase())) : data;\n  const displayData = isSearchClicked ? filteredData : data;\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Fun, {\n      children: /*#__PURE__*/_jsxDEV(InputContainer, {\n        children: [/*#__PURE__*/_jsxDEV(InputSearch, {\n          className: \"input\",\n          type: \"text\",\n          placeholder: \"Search ID Hoteliers or/and Name object\",\n          value: searchQuery,\n          onChange: e => onSearch(e.target.value),\n          autoComplete: \"search\" // Add an appropriate autocomplete value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LabelFormed, {\n          className: \"label\",\n          htmlFor: \"input-id\",\n          children: \"Search ID Hoteliers or/and Name object\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconScrh, {\n          src: pi,\n          alt: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), searchQuery && /*#__PURE__*/_jsxDEV(ClearButtoned, {\n          type: \"button\",\n          onClick: handleClearClick,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SearchButton, {\n          onClick: handleSearchClick,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), displayData.length > 0 && displayData.map((_ref2, index) => {\n      let {\n        id\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(Inner, {\n        border: isShowUsers === index,\n        hidden: isShowUsers !== index && isShowUsers !== null,\n        position: isShowUsers !== null,\n        tabIndex: index,\n        children: [/*#__PURE__*/_jsxDEV(TextID, {\n          tabIndex: index,\n          children: [\"ID \", id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(WrapperText, {\n          tabIndex: index,\n          typePage: type,\n          children: /*#__PURE__*/_jsxDEV(TextContent, {\n            tabIndex: index,\n            children: isLoading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 25\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: data.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"ID: \", item.id]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"Lastname: \", item.lastname]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"Name: \", item.name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 14\n                }, this)]\n              }, item.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 15\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 40\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 7\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n// {/* (name && lastname) || `${\"unluck\"} ${\"unluck\"}`} */}\n_s(UsersList, \"ULR7mIRQyyYfJlUe86b1eRjWNyI=\");\n_c = UsersList;\nvar _c;\n$RefreshReg$(_c, \"UsersList\");","map":{"version":3,"names":["React","useState","useEffect","Spinner","Inner","TextContent","TextID","Wrapper","WrapperText","SearchButton","InputSearch","Fun","InputContainer","IconScrh","LabelFormed","ClearButtoned","pi","jsxDEV","_jsxDEV","UsersList","_ref","_s","type","isShowUsers","searchQuery","onSearch","data","setData","isLoading","setIsLoading","isSearchClicked","setIsSearchClicked","fetch","then","response","json","user","userData","id","lastname","name","console","log","catch","error","handleSearchClick","handleClearClick","filteredData","filter","item","toLowerCase","includes","displayData","children","className","placeholder","value","onChange","e","target","autoComplete","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","src","alt","onClick","length","map","_ref2","index","border","hidden","position","tabIndex","typePage","_c","$RefreshReg$"],"sources":["D:/ad/Adminka/src/components/pages/StatisticsPage/Users/UsersList/UsersList.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Spinner } from 'components/shared/Loader';\nimport { Inner, TextContent, TextID, Wrapper, WrapperText, SearchButton, InputSearch, Fun, InputContainer, IconScrh, LabelFormed, ClearButtoned } from './UsersList.styled';\nimport pi from '../../../../../assets/icons/pict.svg';\n\ntype Prop = {\n  type?: string;\n  isShowUsers?: number | null;\n};\n\nexport type DataProp = {\n  id: string;\n  lastname: string;\n  name: string;\n}\n\nexport const UsersList: React.FC<Prop & { searchQuery?: string, onSearch: (query: string) => void }> = ({ type, isShowUsers, searchQuery, onSearch }) => {\n  const [data, setData] = useState<DataProp[]>([]); // State to hold the fetched data\n  const [isLoading, setIsLoading] = useState(true);\n  const [isSearchClicked, setIsSearchClicked] = useState(false);\n\n  useEffect(() => {\n    // Fetch data from the API when the component mounts\n    fetch('https://server-your-price-booking.onrender.com/api/acsess-to-admin/get-all-users')\n      .then(response => response.json())\n      .then(user => {\n        const userData: DataProp = {\n          id: user.id,\n          lastname: user.lastname,\n          name: user.name\n        };\n        setData([userData]);\n        console.log('Data:', userData);\n        setIsLoading(false); // Mark loading as complete\n\n      })\n      .catch(error => {\n        console.error('Error fetching data:', error);\n        setIsLoading(false); // Mark loading as complete, even on error\n      });\n  }, []);\n \n  const handleSearchClick = () => {\n    setIsSearchClicked(true);\n    \n  };\n\n  const handleClearClick = () => {\n    setIsSearchClicked(false); // Reset the search flag when the input is cleared\n    onSearch(''); // Clear the search query\n  };\n\n  const filteredData = searchQuery\n  ? data.filter((item) => item && item.name && typeof item.name === 'string' && item.name.toLowerCase().includes(searchQuery.toLowerCase()))\n  : data;\n\n  const displayData = isSearchClicked ? filteredData : data;\n\n\n  return (\n    <Wrapper>\n      <Fun>\n        <InputContainer>\n          <InputSearch\n           className=\"input\"\n           type=\"text\"\n           placeholder=\"Search ID Hoteliers or/and Name object\"\n           value={searchQuery}\n           onChange={(e) => onSearch(e.target.value)}\n           autoComplete=\"search\" // Add an appropriate autocomplete value\n          />\n          <LabelFormed className=\"label\" htmlFor=\"input-id\">Search ID Hoteliers or/and Name object</LabelFormed>\n          <IconScrh src={pi} alt=\"Search\" />\n          {searchQuery && (\n            <ClearButtoned type=\"button\" onClick={handleClearClick}>Close</ClearButtoned>\n          )}\n          <SearchButton onClick={handleSearchClick}>Search</SearchButton>\n        </InputContainer>\n      </Fun>\n      \n      {displayData.length > 0 && \n  displayData.map(({ id }, index) => (\n    <Inner\n      key={id}\n      border={isShowUsers === index}\n      hidden={isShowUsers !== index && isShowUsers !== null}\n      position={isShowUsers !== null}\n      tabIndex={index}\n    >\n      <TextID tabIndex={index}>ID {id}</TextID>\n      <WrapperText tabIndex={index} typePage={type}>\n        <TextContent tabIndex={index}>\n          {isLoading ? (<Spinner />) : <div>\n            {data.map((item)=>(\n              <div key={item.id}> \n              <div>ID: {item.id}</div>\n              <div>Lastname: {item.lastname}</div>\n             <div>Name: {item.name}</div>\n              </div>\n            ))}\n          </div>}\n        </TextContent>\n      </WrapperText>\n    </Inner>\n  ))\n}\n    </Wrapper>\n  );\n}\n\n// {/* (name && lastname) || `${\"unluck\"} ${\"unluck\"}`} */}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}