{"ast":null,"code":"var _jsxFileName = \"D:\\\\ad\\\\Adminka\\\\src\\\\components\\\\pages\\\\LoginPage\\\\LoginPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [verificationCode, setVerificationCode] = useState('');\n  const [isCodeSent, setIsCodeSent] = useState(false);\n  // const token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0NWJmOGI1ZWM4NGM0MTY1NDcxNmMzZSIsImlhdCI6MTY5ODA4OTM4OCwiZXhwIjoxNjk4MDkyOTg4fQ.OMlT1T17U4DgdsgbXs8JXmMG5Wb9ECuFL_UjAhibXjI';\n  const sendVerificationCode = async () => {\n    try {\n      // Make an API request to send a verification code to the provided email.\n      const response = await fetch('https://server-your-price-booking.onrender.com/api/acsess-to-admin/check-admin/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email\n        })\n      });\n      if (response.ok) {\n        setIsCodeSent(true);\n      } else {\n        console.error('Error sending verification code');\n      }\n    } catch (error) {\n      console.error('Network error:', error);\n    }\n  };\n  const verifyCode = async () => {\n    try {\n      const response = await fetch('https://server-your-price-booking.onrender.com/api/acsess-to-admin/check-admin/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          code: verificationCode\n        })\n      });\n      if (response.ok) {\n        const userData = await response.json();\n        if (userData.role === 'super admin') {} else if (userData.role === 'admin') {} else {\n          // Handle other user roles.\n        }\n      } else {\n        // Verification failed, handle the error.\n        console.error('Code verification failed');\n      }\n    } catch (error) {\n      // Handle network or other errors.\n      console.error('Network error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isCodeSent ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Verification Code:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: verificationCode,\n          onChange: e => setVerificationCode(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: verifyCode,\n        children: \"Verify Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: sendVerificationCode,\n        children: \"Send Verification Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"XHN6TzOUwDzKA0QwLgB9/JDStvw=\");\n_c = LoginPage;\nexport { LoginPage };\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","LoginPage","_s","email","setEmail","verificationCode","setVerificationCode","isCodeSent","setIsCodeSent","sendVerificationCode","response","fetch","method","headers","body","JSON","stringify","ok","console","error","verifyCode","code","userData","json","role","children","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/ad/Adminka/src/components/pages/LoginPage/LoginPage.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst LoginPage = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [verificationCode, setVerificationCode] = useState('');\r\n  const [isCodeSent, setIsCodeSent] = useState(false);\r\n  // const token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0NWJmOGI1ZWM4NGM0MTY1NDcxNmMzZSIsImlhdCI6MTY5ODA4OTM4OCwiZXhwIjoxNjk4MDkyOTg4fQ.OMlT1T17U4DgdsgbXs8JXmMG5Wb9ECuFL_UjAhibXjI';\r\n  const sendVerificationCode = async () => {\r\n    try {\r\n      // Make an API request to send a verification code to the provided email.\r\n      const response = await fetch('https://server-your-price-booking.onrender.com/api/acsess-to-admin/check-admin/', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        setIsCodeSent(true);\r\n      } else {\r\n        console.error('Error sending verification code');\r\n      }\r\n    } catch (error) {\r\n      console.error('Network error:', error);\r\n    }\r\n  };\r\n\r\n  const verifyCode = async () => {\r\n    try {\r\n      const response = await fetch('https://server-your-price-booking.onrender.com/api/acsess-to-admin/check-admin/', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email, code: verificationCode }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const userData = await response.json();\r\n        if (userData.role === 'super admin') {\r\n        } else if (userData.role === 'admin') {\r\n        } else {\r\n          // Handle other user roles.\r\n        }\r\n      } else {\r\n        // Verification failed, handle the error.\r\n        console.error('Code verification failed');\r\n      }\r\n    } catch (error) {\r\n      // Handle network or other errors.\r\n      console.error('Network error:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isCodeSent ? (\r\n        <div>\r\n          <label>Email:\r\n            <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n          </label>\r\n          <label>Verification Code:\r\n            <input type=\"text\" value={verificationCode} onChange={(e) => setVerificationCode(e.target.value)} />\r\n          </label>\r\n          <button type = \"button\" onClick={verifyCode}>Verify Code</button>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <label>Email:\r\n            <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n          </label>\r\n          <button type=\"button\" onClick={sendVerificationCode}>Send Verification Code</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport{LoginPage};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}