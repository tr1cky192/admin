{"ast":null,"code":"var _jsxFileName = \"D:\\\\ad\\\\Adminka\\\\src\\\\components\\\\pages\\\\StatisticsPage\\\\Users\\\\UsersList\\\\UsersList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\n// import { useSelector } from 'react-redux';\n// import { fetchHotelsById } from 'features/hoteliers/hoteliersOperation';\n// import { useAppDispatch } from 'App';\n// import { selectorHoteliers } from 'features/hoteliers/hoteliersSelectors';\nimport { Spinner } from 'components/shared/Loader';\nimport { Wrapper, SearchButton, InputSearch, Fun, InputContainer, IconScrh, LabelFormed, ClearButtoned, WrapperText, Inner, TextContent, TextID } from './UsersList.styled';\nimport pi from '../../../../../assets/icons/pict.svg';\n\n// import exo from '../../../../../assets/icons/x.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UsersList = _ref => {\n  _s();\n  let {\n    type,\n    isShowUsers,\n    searchQuery,\n    onSearch\n  } = _ref;\n  // const dispatch = useAppDispatch();\n  // const { hoteliers, isLoadingHotels } = useSelector(selectorHoteliers);\n  // console.log(hoteliers)\n  const [isSearchClicked, setIsSearchClicked] = useState(false);\n  const [users, setUsers] = useState([]);\n  const handleSearchClick = () => {\n    setIsSearchClicked(true);\n    console.log('et', users);\n  };\n\n  // const fetchUserData = async () => {\n  //   try {\n  //     const response = await fetch(\"https://server-your-price-booking.onrender.com/api/acsess-to-admin/get-all-users\");\n  //     if (!response.ok) {\n  //       throw new Error(`Failed to fetch user data: ${response.status}`);\n  //     }\n  //     const data: DataProp[] = await response.json();\n  //     setUsers(data);\n  //   } catch (error) {\n  //     console.error(\"Error fetching user data:\", error);\n  //   }\n  // };\n  // useEffect(() => {\n  //   const fetchData = async () => {\n  //     await fetchUserData();\n  //   };\n\n  //   fetchData();\n  // }, []);\n  // const fetchUserData = () => {\n  //   fetch(\"https://server-your-price-booking.onrender.com/api/acsess-to-admin/get-all-users\")\n  //   .then(response => response.json())\n  //   .then((data: DataProp[]) => {\n  //     setUsers(data);\n  //   })\n  // }\n\n  const fetchUserData = async () => {\n    try {\n      const response = await fetch(\"https://server-your-price-booking.onrender.com/api/acsess-to-admin/get-all-users\");\n      if (!response.ok) {\n        throw new Error(`Failed to fetch user data: ${response.status}`);\n      }\n      const data = await response.json();\n      if (Array.isArray(data)) {\n        setUsers(data);\n      } else {\n        console.error(\"API response is not array\", data);\n      }\n    } catch (error) {\n      console.error(\"Error fetching user data:\", error);\n    }\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetchUserData();\n    };\n    fetchData().catch(error => {\n      console.error(\"Error in fetchData:\", error);\n    });\n  }, []);\n\n  // useEffect(() => {\n  //   if (hoteliers.length > 0) hoteliers.map(({ owner }) => dispatch(fetchHotelsById(owner)));\n  //   // eslint-disable-next-line\n  // }, [dispatch]);\n\n  // const data: DataProp[] = [\n  //   {\n  //     name: 'Hopin Viktoria',\n  //     id: '7874567GHV',\n  //   },\n  //   {\n  //     name: 'Klinton Bill',\n  //     id: '1123467LON',\n  //   },\n  //   {\n  //     name: 'Buch Viktoria',\n  //     id: '9889T567KI',\n  //   },\n  //   {\n  //     name: 'Klinton Sofia',\n  //     id: '1123467LON',\n  //   },\n  // ];\n\n  const filteredData = searchQuery ? users.filter(item => item.name.toLowerCase().includes(searchQuery.toLowerCase())) : users;\n  const handleClearClick = () => {\n    setIsSearchClicked(false); // Скидаємо флаг пошуку, коли поле очищається\n    onSearch(''); // Очищаємо searchQuery\n  };\n\n  const displayData = isSearchClicked ? filteredData : users;\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Fun, {\n      children: /*#__PURE__*/_jsxDEV(InputContainer, {\n        children: [/*#__PURE__*/_jsxDEV(InputSearch, {\n          className: \"input\",\n          type: \"text\",\n          placeholder: \"Search ID Hoteliers or/and Name object\",\n          value: searchQuery,\n          onChange: e => onSearch(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(LabelFormed, {\n          className: \"label\",\n          htmlFor: \"input-id\",\n          children: \"Search ID Hoteliers or/and Name object\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(IconScrh, {\n          src: pi,\n          alt: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 5\n        }, this), searchQuery && /*#__PURE__*/_jsxDEV(ClearButtoned, {\n          type: \"button\",\n          onClick: handleClearClick,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(SearchButton, {\n          onClick: handleSearchClick,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), displayData.length > 0 && displayData.map((_ref2, index) => {\n      let {\n        name,\n        _id\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(Inner, {\n        border: isShowUsers === index,\n        hidden: isShowUsers !== index && isShowUsers !== null,\n        position: isShowUsers !== null,\n        tabIndex: index,\n        children: [/*#__PURE__*/_jsxDEV(TextID, {\n          tabIndex: index,\n          children: [\"ID \", _id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(WrapperText, {\n          tabIndex: index,\n          typePage: type,\n          children: /*#__PURE__*/_jsxDEV(TextContent, {\n            tabIndex: index,\n            children: [isShowUsers && /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 33\n            }, this), !isShowUsers && isShowUsers !== index && (users && users.length > 20 ? name.slice(0, 6) : name), !isShowUsers && isShowUsers !== index && users && users.length > 0 && '...']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this)]\n      }, name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 7\n  }, this);\n};\n_s(UsersList, \"6FmLpAkkOPr+pc2FZ+TBn5hl4XI=\");\n_c = UsersList;\nvar _c;\n$RefreshReg$(_c, \"UsersList\");","map":{"version":3,"names":["React","useEffect","useState","Spinner","Wrapper","SearchButton","InputSearch","Fun","InputContainer","IconScrh","LabelFormed","ClearButtoned","WrapperText","Inner","TextContent","TextID","pi","jsxDEV","_jsxDEV","UsersList","_ref","_s","type","isShowUsers","searchQuery","onSearch","isSearchClicked","setIsSearchClicked","users","setUsers","handleSearchClick","console","log","fetchUserData","response","fetch","ok","Error","status","data","json","Array","isArray","error","fetchData","catch","filteredData","filter","item","name","toLowerCase","includes","handleClearClick","displayData","children","className","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","src","alt","onClick","length","map","_ref2","index","_id","border","hidden","position","tabIndex","typePage","slice","_c","$RefreshReg$"],"sources":["D:/ad/Adminka/src/components/pages/StatisticsPage/Users/UsersList/UsersList.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n// import { useSelector } from 'react-redux';\n// import { fetchHotelsById } from 'features/hoteliers/hoteliersOperation';\n// import { useAppDispatch } from 'App';\n// import { selectorHoteliers } from 'features/hoteliers/hoteliersSelectors';\nimport { Spinner } from 'components/shared/Loader';\nimport {  Wrapper,  SearchButton,InputSearch,Fun,InputContainer,IconScrh, LabelFormed,ClearButtoned,WrapperText,Inner, TextContent, TextID, } from './UsersList.styled';\nimport pi from '../../../../../assets/icons/pict.svg';\n\n// import exo from '../../../../../assets/icons/x.svg';\ntype Prop = {\n    type?: string;\n  isShowUsers?: number | null;\n  \n};\n\nexport type DataProp  = {\n  name: string;\n  _id: string;\n}\n\n\nexport const UsersList: React.FC<Prop & { searchQuery?: string, onSearch: (query: string)=> void }> = ({ type, isShowUsers, searchQuery, onSearch }) => {\n    // const dispatch = useAppDispatch();\n    // const { hoteliers, isLoadingHotels } = useSelector(selectorHoteliers);\n    // console.log(hoteliers)\n    const [isSearchClicked, setIsSearchClicked] = useState(false);\n    const [users, setUsers] = useState<DataProp[]>([]);\n    const handleSearchClick = () => {\n      setIsSearchClicked(true);\n      console.log('et',users);\n    };\n\n    // const fetchUserData = async () => {\n    //   try {\n    //     const response = await fetch(\"https://server-your-price-booking.onrender.com/api/acsess-to-admin/get-all-users\");\n    //     if (!response.ok) {\n    //       throw new Error(`Failed to fetch user data: ${response.status}`);\n    //     }\n    //     const data: DataProp[] = await response.json();\n    //     setUsers(data);\n    //   } catch (error) {\n    //     console.error(\"Error fetching user data:\", error);\n    //   }\n    // };\n    // useEffect(() => {\n    //   const fetchData = async () => {\n    //     await fetchUserData();\n    //   };\n        \n    //   fetchData();\n    // }, []);\n    // const fetchUserData = () => {\n    //   fetch(\"https://server-your-price-booking.onrender.com/api/acsess-to-admin/get-all-users\")\n    //   .then(response => response.json())\n    //   .then((data: DataProp[]) => {\n    //     setUsers(data);\n    //   })\n    // }\n   \n    \n    \n    const fetchUserData = async () => {\n      try {\n        const response = await fetch(\"https://server-your-price-booking.onrender.com/api/acsess-to-admin/get-all-users\");\n        if (!response.ok) {\n          throw new Error(`Failed to fetch user data: ${response.status}`);\n        }\n        const data: DataProp[] = await response.json();\n        if(Array.isArray(data)){\n          setUsers(data);\n        }\n        else{\n          console.error(\"API response is not array\",data);\n        }\n      } catch (error) {\n        console.error(\"Error fetching user data:\", error);\n      }\n    };\n  \n    useEffect(() => {\n      const fetchData = async () => {\n        await fetchUserData();\n      };\n    \n      fetchData().catch(error => {\n        \n       \n    console.error(\"Error in fetchData:\", error);\n      });\n    }, []);\n  \n\n    // useEffect(() => {\n    //   if (hoteliers.length > 0) hoteliers.map(({ owner }) => dispatch(fetchHotelsById(owner)));\n    //   // eslint-disable-next-line\n    // }, [dispatch]);\n  \n    // const data: DataProp[] = [\n    //   {\n    //     name: 'Hopin Viktoria',\n    //     id: '7874567GHV',\n    //   },\n    //   {\n    //     name: 'Klinton Bill',\n    //     id: '1123467LON',\n    //   },\n    //   {\n    //     name: 'Buch Viktoria',\n    //     id: '9889T567KI',\n    //   },\n    //   {\n    //     name: 'Klinton Sofia',\n    //     id: '1123467LON',\n    //   },\n    // ];\n\n\n    const filteredData = searchQuery\n    ? users.filter((item) => item.name.toLowerCase().includes(searchQuery.toLowerCase()))\n    : users;\n    const handleClearClick = () => {\n      setIsSearchClicked(false); // Скидаємо флаг пошуку, коли поле очищається\n      onSearch(''); // Очищаємо searchQuery\n    };\n  const displayData = isSearchClicked ? filteredData : users;\n    return (\n      <Wrapper>\n      <Fun>\n     <InputContainer>\n      <InputSearch\n      className=\"input\"\n      type=\"text\"\n      placeholder=\"Search ID Hoteliers or/and Name object\"\n      value={searchQuery}\n      onChange={(e) => onSearch(e.target.value)}\n    />\n    <LabelFormed className=\"label\" htmlFor=\"input-id\">Search ID Hoteliers or/and Name object</LabelFormed>\n    <IconScrh src={pi} alt=\"Search\" />\n    {searchQuery && (\n<ClearButtoned type=\"button\" onClick={handleClearClick}>Close</ClearButtoned>\n)}\n    <SearchButton onClick={handleSearchClick}>Search</SearchButton>\n    </InputContainer>\n    </Fun>\n      {displayData.length > 0 &&\n        displayData.map(({ name,_id }, index) => (\n          <Inner\n            border={isShowUsers === index}\n            hidden={isShowUsers !== index && isShowUsers !== null}\n            position={isShowUsers !== null}\n            key={name}\n            tabIndex={index}\n          >\n            <TextID tabIndex={index}>ID {_id}</TextID>\n            <WrapperText tabIndex={index} typePage={type}>\n              <TextContent tabIndex={index}>\n                {isShowUsers && <Spinner/>}\n                {!isShowUsers &&\n                  isShowUsers !== index &&\n                  (users &&  users.length > 20 ? name.slice(0, 6) : name)}\n                {!isShowUsers && isShowUsers !== index && users && users.length > 0 && '...'}\n              </TextContent>\n            </WrapperText>\n          </Inner>\n        ))}\n    </Wrapper>\n    );\n} "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD;AACA;AACA;AACA;AACA,SAASC,OAAO,QAAQ,0BAA0B;AAClD,SAAUC,OAAO,EAAGC,YAAY,EAACC,WAAW,EAACC,GAAG,EAACC,cAAc,EAACC,QAAQ,EAAEC,WAAW,EAACC,aAAa,EAACC,WAAW,EAACC,KAAK,EAAEC,WAAW,EAAEC,MAAM,QAAS,oBAAoB;AACvK,OAAOC,EAAE,MAAM,sCAAsC;;AAErD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAaA,OAAO,MAAMC,SAAsF,GAAGC,IAAA,IAAkD;EAAAC,EAAA;EAAA,IAAjD;IAAEC,IAAI;IAAEC,WAAW;IAAEC,WAAW;IAAEC;EAAS,CAAC,GAAAL,IAAA;EAC/I;EACA;EACA;EACA,MAAM,CAACM,eAAe,EAAEC,kBAAkB,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAAC0B,KAAK,EAAEC,QAAQ,CAAC,GAAG3B,QAAQ,CAAa,EAAE,CAAC;EAClD,MAAM4B,iBAAiB,GAAGA,CAAA,KAAM;IAC9BH,kBAAkB,CAAC,IAAI,CAAC;IACxBI,OAAO,CAACC,GAAG,CAAC,IAAI,EAACJ,KAAK,CAAC;EACzB,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAIA,MAAMK,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kFAAkF,CAAC;MAChH,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAE,8BAA6BH,QAAQ,CAACI,MAAO,EAAC,CAAC;MAClE;MACA,MAAMC,IAAgB,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAC9C,IAAGC,KAAK,CAACC,OAAO,CAACH,IAAI,CAAC,EAAC;QACrBV,QAAQ,CAACU,IAAI,CAAC;MAChB,CAAC,MACG;QACFR,OAAO,CAACY,KAAK,CAAC,2BAA2B,EAACJ,IAAI,CAAC;MACjD;IACF,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdZ,OAAO,CAACY,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EAED1C,SAAS,CAAC,MAAM;IACd,MAAM2C,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMX,aAAa,CAAC,CAAC;IACvB,CAAC;IAEDW,SAAS,CAAC,CAAC,CAACC,KAAK,CAACF,KAAK,IAAI;MAG7BZ,OAAO,CAACY,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IACzC,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;;EAGN;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA,MAAMG,YAAY,GAAGtB,WAAW,GAC9BI,KAAK,CAACmB,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC3B,WAAW,CAAC0B,WAAW,CAAC,CAAC,CAAC,CAAC,GACnFtB,KAAK;EACP,MAAMwB,gBAAgB,GAAGA,CAAA,KAAM;IAC7BzB,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC;IAC3BF,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAChB,CAAC;;EACH,MAAM4B,WAAW,GAAG3B,eAAe,GAAGoB,YAAY,GAAGlB,KAAK;EACxD,oBACEV,OAAA,CAACd,OAAO;IAAAkD,QAAA,gBACRpC,OAAA,CAACX,GAAG;MAAA+C,QAAA,eACLpC,OAAA,CAACV,cAAc;QAAA8C,QAAA,gBACdpC,OAAA,CAACZ,WAAW;UACZiD,SAAS,EAAC,OAAO;UACjBjC,IAAI,EAAC,MAAM;UACXkC,WAAW,EAAC,wCAAwC;UACpDC,KAAK,EAAEjC,WAAY;UACnBkC,QAAQ,EAAGC,CAAC,IAAKlC,QAAQ,CAACkC,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3C,CAAC,eACF9C,OAAA,CAACR,WAAW;UAAC6C,SAAS,EAAC,OAAO;UAACU,OAAO,EAAC,UAAU;UAAAX,QAAA,EAAC;QAAsC;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAAC,eACtG9C,OAAA,CAACT,QAAQ;UAACyD,GAAG,EAAElD,EAAG;UAACmD,GAAG,EAAC;QAAQ;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EACjCxC,WAAW,iBAChBN,OAAA,CAACP,aAAa;UAACW,IAAI,EAAC,QAAQ;UAAC8C,OAAO,EAAEhB,gBAAiB;UAAAE,QAAA,EAAC;QAAK;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAe,CAC3E,eACG9C,OAAA,CAACb,YAAY;UAAC+D,OAAO,EAAEtC,iBAAkB;UAAAwB,QAAA,EAAC;QAAM;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAc,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC,EACHX,WAAW,CAACgB,MAAM,GAAG,CAAC,IACrBhB,WAAW,CAACiB,GAAG,CAAC,CAAAC,KAAA,EAAeC,KAAK;MAAA,IAAnB;QAAEvB,IAAI;QAACwB;MAAI,CAAC,GAAAF,KAAA;MAAA,oBAC3BrD,OAAA,CAACL,KAAK;QACJ6D,MAAM,EAAEnD,WAAW,KAAKiD,KAAM;QAC9BG,MAAM,EAAEpD,WAAW,KAAKiD,KAAK,IAAIjD,WAAW,KAAK,IAAK;QACtDqD,QAAQ,EAAErD,WAAW,KAAK,IAAK;QAE/BsD,QAAQ,EAAEL,KAAM;QAAAlB,QAAA,gBAEhBpC,OAAA,CAACH,MAAM;UAAC8D,QAAQ,EAAEL,KAAM;UAAAlB,QAAA,GAAC,KAAG,EAACmB,GAAG;QAAA;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,eAC1C9C,OAAA,CAACN,WAAW;UAACiE,QAAQ,EAAEL,KAAM;UAACM,QAAQ,EAAExD,IAAK;UAAAgC,QAAA,eAC3CpC,OAAA,CAACJ,WAAW;YAAC+D,QAAQ,EAAEL,KAAM;YAAAlB,QAAA,GAC1B/B,WAAW,iBAAIL,OAAA,CAACf,OAAO;cAAA0D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAC,CAAC,EACzB,CAACzC,WAAW,IACXA,WAAW,KAAKiD,KAAK,KACpB5C,KAAK,IAAKA,KAAK,CAACyC,MAAM,GAAG,EAAE,GAAGpB,IAAI,CAAC8B,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG9B,IAAI,CAAC,EACxD,CAAC1B,WAAW,IAAIA,WAAW,KAAKiD,KAAK,IAAI5C,KAAK,IAAIA,KAAK,CAACyC,MAAM,GAAG,CAAC,IAAI,KAAK;UAAA;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA,GAZTf,IAAI;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAaJ,CAAC;IAAA,CACT,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEd,CAAC;AAAA3C,EAAA,CAlJYF,SAAsF;AAAA6D,EAAA,GAAtF7D,SAAsF;AAAA,IAAA6D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}