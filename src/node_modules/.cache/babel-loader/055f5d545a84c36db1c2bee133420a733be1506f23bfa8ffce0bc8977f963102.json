{"ast":null,"code":"var _jsxFileName = \"D:\\\\ad\\\\Adminka\\\\src\\\\components\\\\pages\\\\LoginPage\\\\LoginPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [verificationCode, setVerificationCode] = useState('');\n  const [isCodeSent, setIsCodeSent] = useState(false);\n  const [userRole, setUserRole] = useState(null);\n  const handleEmailChange = e => {\n    setEmail(e.target.value);\n  };\n  const handleVerificationCodeChange = e => {\n    setVerificationCode(e.target.value);\n  };\n  const sendVerificationCode = async () => {\n    try {\n      const response = await axios.get('https://server-your-price-booking.onrender.com/api/acsess-to-admin/check-admin/', {\n        params: {\n          email: `${email}` // Pass the email as a query parameter\n        }\n      });\n\n      const {\n        status,\n        data\n      } = response.data;\n      if (status === 'success') {\n        if (data && data.role) {\n          setIsCodeSent(true);\n          setUserRole(data.role);\n        } else {\n          console.error('Role information is missing in the response data');\n        }\n      } else {\n        console.error('Verification failed');\n      }\n    } catch (error) {\n      console.error('Error while verifying the secret code', error);\n    }\n  };\n  const verifyCode = async () => {\n    try {\n      if (userRole === 'superadmin') {\n        console.log('Super Admin Access');\n      } else if (userRole === 'admin') {\n        console.log('Admin Access');\n      } else {\n        console.error('Invalid user role');\n      }\n    } catch (error) {\n      console.error('Code verification failed', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isCodeSent ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: handleEmailChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Verification Code:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: verificationCode,\n          onChange: handleVerificationCodeChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: verifyCode,\n        children: \"Verify Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: handleEmailChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: sendVerificationCode,\n        children: \"Send Verification Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"Z7l0z8dQdu3hQ9ltmq/2FqD405o=\");\n_c = LoginPage;\nexport { LoginPage };\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","LoginPage","_s","email","setEmail","verificationCode","setVerificationCode","isCodeSent","setIsCodeSent","userRole","setUserRole","handleEmailChange","e","target","value","handleVerificationCodeChange","sendVerificationCode","response","get","params","status","data","role","console","error","verifyCode","log","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/ad/Adminka/src/components/pages/LoginPage/LoginPage.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nconst LoginPage = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [verificationCode, setVerificationCode] = useState('');\r\n  const [isCodeSent, setIsCodeSent] = useState(false);\r\n  const [userRole, setUserRole] = useState<string | null>(null);\r\n\r\n  const handleEmailChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setEmail(e.target.value);\r\n  };\r\n  \r\n  const handleVerificationCodeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setVerificationCode(e.target.value);\r\n  };\r\n\r\n  const sendVerificationCode = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        'https://server-your-price-booking.onrender.com/api/acsess-to-admin/check-admin/',\r\n        {\r\n          params: {\r\n            email: `${email}`, // Pass the email as a query parameter\r\n          },\r\n        }\r\n      );\r\n  \r\n      const { status, data } = response.data;\r\n      if (status === 'success') {\r\n        if (data && data.role) {\r\n          setIsCodeSent(true);\r\n          setUserRole(data.role as string | null);\r\n        } else {\r\n          console.error('Role information is missing in the response data');\r\n        }\r\n      } else {\r\n        console.error('Verification failed');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error while verifying the secret code', error);\r\n    }\r\n  };\r\n\r\n  const verifyCode = async () => {\r\n    try {\r\n      if (userRole === 'superadmin') {\r\n        console.log('Super Admin Access');\r\n      } else if (userRole === 'admin') {\r\n        console.log('Admin Access');\r\n      } else {\r\n        console.error('Invalid user role');\r\n      }\r\n    } catch (error) {\r\n      console.error('Code verification failed', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isCodeSent ? (\r\n        <div>\r\n          <label>Email:\r\n            <input type=\"email\" value={email} onChange={handleEmailChange} />\r\n          </label>\r\n          <label>Verification Code:\r\n            <input type=\"text\" value={verificationCode} onChange={handleVerificationCodeChange} />\r\n          </label>\r\n          <button type=\"button\" onClick={verifyCode}>Verify Code</button>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <label>Email:\r\n            <input type=\"email\" value={email} onChange={handleEmailChange} />\r\n          </label>\r\n          <button type=\"button\" onClick={sendVerificationCode}>Send Verification Code</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { LoginPage };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}